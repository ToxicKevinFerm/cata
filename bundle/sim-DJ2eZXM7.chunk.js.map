{"version":3,"file":"sim-DJ2eZXM7.chunk.js","sources":["../../../ui/warrior/protection/presets.ts","../../../ui/warrior/protection/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils.js';\nimport { BattleElixir, Consumes, Explosive, Flask, Food, Glyphs, GuardianElixir, Potions, Profession, Spec } from '../../core/proto/common.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport {\n\tProtectionWarrior_Options as ProtectionWarriorOptions,\n\tProtectionWarrior_Rotation as ProtectionWarriorRotation,\n\tWarriorMajorGlyph,\n\tWarriorMinorGlyph,\n\tWarriorPrimeGlyph,\n\tWarriorShout,\n} from '../../core/proto/warrior.js';\nimport DefaultApl from './apls/default.apl.json';\nimport P1BISGear from './gear_sets/p1_bis.gear.json';\nimport PreraidBISGear from './gear_sets/preraid.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_BALANCED_PRESET = PresetUtils.makePresetGear('P1 PreRaid Preset', PreraidBISGear);\nexport const P1_BALANCED_PRESET = PresetUtils.makePresetGear('P1 BIS Preset', P1BISGear);\n\n\nexport const ROTATION_DEFAULT = PresetUtils.makePresetAPLRotation('Default APL', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '320003-002-33213201121210212031',\n\t\tglyphs: Glyphs.create({\n\t\t\tprime1: WarriorPrimeGlyph.GlyphOfRevenge,\n\t\t\tprime2: WarriorPrimeGlyph.GlyphOfShieldSlam,\n\t\t\tprime3: WarriorPrimeGlyph.GlyphOfDevastate,\n\t\t\tmajor1: WarriorMajorGlyph.GlyphOfShieldWall,\n\t\t\tmajor2: WarriorMajorGlyph.GlyphOfShockwave,\n\t\t\tmajor3: WarriorMajorGlyph.GlyphOfThunderClap,\n\t\t\tminor1: WarriorMinorGlyph.GlyphOfShatteringThrow,\n\t\t\tminor2: WarriorMinorGlyph.GlyphOfDemoralizingShout,\n\t\t\tminor3: WarriorMinorGlyph.GlyphOfCommand,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = ProtectionWarriorOptions.create({\n\tclassOptions: {\n\t\tshout: WarriorShout.WarriorShoutCommanding,\n\t\tuseShatteringThrow: false,\n\t\tstartingRage: 0,\n\t},\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfSteelskin,\n\t// battleElixir: BattleElixir.ElixirOfExpertise,\n\t// guardianElixir: GuardianElixir.ElixirOfProtection,\n\tfood: Food.FoodBeerBasedCrocolisk,\n\tdefaultPotion: Potions.EarthenPotion,\n\tprepopPotion: Potions.EarthenPotion,\n});\n\nexport const OtherDefaults = {\n\tprofession1: Profession.Leatherworking,\n\tprofession2: Profession.Inscription,\n};\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../../core/components/other_inputs.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLAction, APLListItem, APLPrepullAction, APLRotation } from '../../core/proto/apl.js';\nimport { Cooldowns, Debuffs, Faction, IndividualBuffs, PartyBuffs, PseudoStat, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common.js';\nimport { ProtectionWarrior_Rotation as ProtectionWarriorRotation } from '../../core/proto/warrior.js';\nimport * as AplUtils from '../../core/proto_utils/apl_utils.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport * as ProtectionWarriorInputs from '../inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecProtectionWarrior, {\n\tcssClass: 'protection-warrior-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Warrior),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatBlock,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t\tStat.StatMastery,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatBlock,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t\tStat.StatMastery,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_BALANCED_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatArmor]: 0.174,\n\t\t\t\t[Stat.StatBonusArmor]: 0.155,\n\t\t\t\t[Stat.StatStamina]: 2.336,\n\t\t\t\t[Stat.StatStrength]: 1.555,\n\t\t\t\t[Stat.StatAgility]: 2.771,\n\t\t\t\t[Stat.StatAttackPower]: 0.32,\n\t\t\t\t[Stat.StatExpertise]: 1.44,\n\t\t\t\t[Stat.StatMeleeHit]: 1.432,\n\t\t\t\t[Stat.StatMeleeCrit]: 0.925,\n\t\t\t\t[Stat.StatMeleeHaste]: 0.431,\n\t\t\t\t[Stat.StatBlock]: 1.32,\n\t\t\t\t[Stat.StatDodge]: 2.606,\n\t\t\t\t[Stat.StatParry]: 2.649,\n\t\t\t\t// @todo: Calculate actual weights\n\t\t\t\t// This probably applies for all weights\n\t\t\t\t[Stat.StatMastery]: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 6.081,\n\t\t\t},\n\t\t),\n\t\tother: Presets.OtherDefaults,\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t\tdevotionAura: true,\n\t\t\tretributionAura: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tsunderArmor: true,\n\t\t\tmangle: true,\n\t\t\tvindication: true,\n\t\t\tbloodFrenzy: true,\n\t\t\tjudgement: true,\n\t\t\tfrostFever: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [ProtectionWarriorInputs.ShoutPicker(), ProtectionWarriorInputs.ShatteringThrow(),ProtectionWarriorInputs.Recklessness()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [BuffDebuffInputs.StaminaBuff],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.InputDelay,\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.IncomingHps,\n\t\t\tOtherInputs.HealingCadence,\n\t\t\tOtherInputs.HealingCadenceVariation,\n\t\t\tOtherInputs.BurstWindow,\n\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tProtectionWarriorInputs.StartingRage(),\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.StandardTalents, Presets.StandardTalents],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.ROTATION_DEFAULT, Presets.ROTATION_DEFAULT],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_BALANCED_PRESET,\n\t\t\tPresets.P1_BALANCED_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecProtectionWarrior>): APLRotation => {\n\t\treturn Presets.ROTATION_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecProtectionWarrior,\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_BALANCED_PRESET.gear,\n\t\t\t\t\t2: Presets.PRERAID_BALANCED_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_BALANCED_PRESET.gear,\n\t\t\t\t\t2: Presets.PRERAID_BALANCED_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t},\n\t],\n});\n\nexport class ProtectionWarriorSimUI extends IndividualSimUI<Spec.SpecProtectionWarrior> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecProtectionWarrior>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PRERAID_BALANCED_PRESET","PresetUtils.makePresetGear","P1_BALANCED_PRESET","P1BISGear","ROTATION_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","StandardTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","prime1","WarriorPrimeGlyph","GlyphOfRevenge","prime2","GlyphOfShieldSlam","prime3","GlyphOfDevastate","major1","WarriorMajorGlyph","GlyphOfShieldWall","major2","GlyphOfShockwave","major3","GlyphOfThunderClap","minor1","WarriorMinorGlyph","GlyphOfShatteringThrow","minor2","GlyphOfDemoralizingShout","minor3","GlyphOfCommand","DefaultOptions","ProtectionWarriorOptions","classOptions","shout","WarriorShout","WarriorShoutCommanding","useShatteringThrow","startingRage","DefaultConsumes","Consumes","flask","Flask","FlaskOfSteelskin","food","Food","FoodBeerBasedCrocolisk","defaultPotion","Potions","EarthenPotion","prepopPotion","OtherDefaults","profession1","Profession","Leatherworking","profession2","Inscription","SPEC_CONFIG","registerSpecConfig","Spec","SpecProtectionWarrior","cssClass","cssScheme","PlayerClasses","getCssClass","Warrior","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmor","StatBonusArmor","StatBlock","StatDodge","StatParry","StatNatureResistance","StatShadowResistance","StatFrostResistance","StatMastery","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatHealth","defaults","gear","Presets.P1_BALANCED_PRESET","epWeights","Stats","fromMap","other","Presets.OtherDefaults","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfMight","communion","devotionAura","retributionAura","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","debuffs","Debuffs","sunderArmor","mangle","vindication","bloodFrenzy","judgement","frostFever","playerIconInputs","ProtectionWarriorInputs.ShoutPicker","ProtectionWarriorInputs.ShatteringThrow","ProtectionWarriorInputs.Recklessness","includeBuffDebuffInputs","BuffDebuffInputs.StaminaBuff","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.InputDelay","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","ProtectionWarriorInputs.StartingRage","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_DEFAULT","Presets.PRERAID_BALANCED_PRESET","autoRotation","_player","rotation","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceOrc","defaultGear","otherDefaults","ProtectionWarriorSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"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"}