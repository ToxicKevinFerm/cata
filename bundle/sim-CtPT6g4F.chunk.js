import{C as e,ab as t,j as a,ac as s,ad as n,ae as i,o as l,q as o,s as r,a6 as p,$ as d,u as c,v as S,w as m,T as g,F as f,J as h}from"./preset_utils-Cf2AMUmT.chunk.js";import{L as u,A as y,bm as O,bo as w,bp as b,bq as I,a1 as T,G as v,bg as P,bh as A,bi as C,br as k,bk as E,bl as M,bn as H,w as W,y as F,x as D,W as x,b as G,a6 as B,a9 as L,a7 as N,a8 as j,aa as R,ae as V,ah as U,a as z,ad as q,ab as _,ac as J,af as K,ag as $,aj as Q,S as X,F as Y,R as Z}from"./detailed_results-Bq3U1zBE.chunk.js";import{S as ee,a as te,T as ae}from"./inputs-B4jqlMuo.chunk.js";const se=n({fieldName:"imbueOh",values:[{value:b.NoImbue,tooltip:"No Off Hand Enchant"},{actionId:y.fromSpellId(8232),value:b.WindfuryWeapon},{actionId:y.fromSpellId(8024),value:b.FlametongueWeapon},{actionId:y.fromSpellId(8033),value:b.FrostbrandWeapon}]}),ne=i({fieldName:"syncType",label:"Sync/Stagger Setting",labelTooltip:"Choose your sync or stagger option Perfect\n\t\t<ul>\n\t\t\t<li><div>Auto: Will auto pick sync options based on your weapons attack speeds</div></li>\n\t\t\t<li><div>None: No Sync or Staggering, used for mismatched weapon speeds</div></li>\n\t\t\t<li><div>Perfect Sync: Makes your weapons always attack at the same time, for match weapon speeds</div></li>\n\t\t\t<li><div>Delayed Offhand: Adds a slight delay to the offhand attacks while staying within the 0.5s flurry ICD window</div></li>\n\t\t</ul>",values:[{name:"Automatic",value:I.Auto},{name:"None",value:I.NoSync},{name:"Perfect Sync",value:I.SyncMainhandOffhandSwings},{name:"Delayed Offhand",value:I.DelayOffhandSwings}]}),ie={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:324}}},doAtValue:{const:{val:"-6s"}}},{action:{castSpell:{spellId:{spellId:66842}}},doAtValue:{const:{val:"-3s"}}},{action:{castSpell:{spellId:{spellId:51533}}},doAtValue:{const:{val:"-1.5s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{not:{val:{dotIsActive:{spellId:{spellId:8050,tag:1}}}}},castSpell:{spellId:{spellId:8050}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:3599}}},rhs:{const:{val:"100ms"}}}}]}},castSpell:{spellId:{spellId:3599}}}},{action:{castSpell:{spellId:{spellId:17364}}}},{action:{castSpell:{spellId:{spellId:78146}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLt",lhs:{math:{op:"OpAdd",lhs:{inputDelay:{}},rhs:{spellCastTime:{spellId:{spellId:403}}}}},rhs:{autoTimeToNext:{}}}},{cmp:{op:"OpGe",lhs:{auraNumStacks:{auraId:{spellId:51530}}},rhs:{const:{val:"2"}}}}]}},castSpell:{spellId:{spellId:403}}}},{action:{castSpell:{spellId:{spellId:73680}}}},{action:{castSpell:{spellId:{spellId:8042}}}}]},le={items:[{id:65251,enchant:4209,gems:[68778,52204]},{id:69880,randomSuffix:-136},{id:65253,enchant:4204,gems:[52212]},{id:69884,randomSuffix:-136,enchant:4118,reforging:153},{id:65037,enchant:4102,gems:[52212,52220]},{id:65028,enchant:4258,gems:[0],reforging:147},{id:65250,enchant:4107,gems:[52212,0],reforging:147},{id:65368,randomSuffix:-236,gems:[52212,52212],reforging:153},{id:65252,enchant:4126,gems:[52204,52204],reforging:151},{id:65063,enchant:4076,gems:[52212],reforging:154},{id:65082,reforging:147},{id:65367,randomSuffix:-136},{id:58181,reforging:140},{id:65140},{id:65024,enchant:4099,reforging:154},{id:65014,enchant:4099},{id:64671,gems:[52212],reforging:154}]},oe=l("Pre-raid Preset",{items:[{id:56298,enchant:4209,gems:[68778,52235]},{id:56422},{id:56419,enchant:4204,gems:[52235]},{id:63473,enchant:4118,reforging:144},{id:58121,enchant:4102,gems:[52220,52209]},{id:63479,enchant:4258,gems:[0],reforging:147},{id:56268,enchant:4082,gems:[52209,0],reforging:144},{id:56363,gems:[52235,52235],reforging:144},{id:56386,enchant:4126,gems:[52230,52235]},{id:62385,enchant:4076,gems:[52209]},{id:56445,reforging:147},{id:62362,reforging:151},{id:56427},{id:68776,gems:[52212],reforging:144},{id:56396,enchant:4099},{id:57928,enchant:4099,reforging:144},{id:64671,gems:[52212],reforging:144}]}),re=l("P1 Preset",le),pe=o("Default",ie),de={name:"Standard",data:T.create({talentsString:"3022003-2333310013003012321",glyphs:v.create({prime1:P.GlyphOfLavaLash,prime2:P.GlyphOfStormstrike,prime3:P.GlyphOfFeralSpirit,major1:A.GlyphOfLightningShield,major2:A.GlyphOfChainLightning,major3:A.GlyphOfFireNova,minor1:C.GlyphOfWaterWalking,minor2:C.GlyphOfRenewedLife,minor3:C.GlyphOfTheArcticWolf})})},ce=k.create({classOptions:{shield:E.LightningShield,call:M.Elements,totems:O.create({elements:H.create({earth:W.StrengthOfEarthTotem,air:F.WrathOfAirTotem,fire:D.SearingTotem,water:x.ManaSpringTotem}),ancestors:H.create({earth:W.StrengthOfEarthTotem,air:F.WrathOfAirTotem,fire:D.SearingTotem,water:x.ManaSpringTotem}),spirits:H.create({earth:W.StrengthOfEarthTotem,air:F.WrathOfAirTotem,fire:D.SearingTotem,water:x.ManaSpringTotem}),earth:W.StrengthOfEarthTotem,air:F.WrathOfAirTotem,fire:D.SearingTotem,water:x.ManaSpringTotem}),imbueMh:b.WindfuryWeapon},imbueOh:b.FlametongueWeapon,syncType:I.Auto}),Se={profession1:G.Engineering,profession2:G.Tailoring,distanceFromTarget:5},me=B.create({defaultPotion:L.PotionOfTheTolvir,prepopPotion:L.PotionOfTheTolvir,flask:N.FlaskOfTheWinds,food:j.FoodSeafoodFeast,tinkerHands:R.TinkerHandsSynapseSprings}),ge=V.create({arcaneBrilliance:!0,bloodlust:!0,markOfTheWild:!0,icyTalons:!0,moonkinForm:!0,leaderOfThePack:!0,powerWordFortitude:!0,strengthOfEarthTotem:!0,trueshotAura:!0,wrathOfAirTotem:!0,demonicPact:!0,blessingOfKings:!0,blessingOfMight:!0,communion:!0}),fe=U.create({bloodFrenzy:!0,sunderArmor:!0,ebonPlaguebringer:!0,mangle:!0,criticalMass:!0,demoralizingShout:!0,frostFever:!0,judgement:!0}),he=r(X.SpecEnhancementShaman,{cssClass:"enhancement-shaman-sim-ui",cssScheme:z.getCssClass(z.Shaman),knownIssues:[],overwriteDisplayStats:e=>{const t=e.getCurrentStats(),a=(e,t)=>(new q).withStat(_.StatSpellPower,.55*q.fromProto(e).subtract(q.fromProto(t)).getStat(_.StatAttackPower));return{base:a(t.baseStats),gear:a(t.gearStats,t.baseStats),talents:a(t.talentsStats,t.gearStats),buffs:a(t.buffsStats,t.talentsStats),consumes:a(t.consumesStats,t.buffsStats),final:(new q).withStat(_.StatSpellPower,.55*q.fromProto(t.finalStats).getStat(_.StatAttackPower)),stats:[_.StatSpellPower]}},epStats:[_.StatAgility,_.StatIntellect,_.StatAttackPower,_.StatMeleeHit,_.StatMeleeCrit,_.StatMeleeHaste,_.StatExpertise,_.StatSpellPower,_.StatSpellHit,_.StatSpellCrit,_.StatSpellHaste,_.StatMastery],epPseudoStats:[J.PseudoStatMainHandDps,J.PseudoStatOffHandDps],epReferenceStat:_.StatAttackPower,displayStats:[_.StatHealth,_.StatStamina,_.StatStrength,_.StatAgility,_.StatIntellect,_.StatAttackPower,_.StatMeleeHit,_.StatMeleeCrit,_.StatMeleeHaste,_.StatExpertise,_.StatSpellPower,_.StatSpellHit,_.StatSpellCrit,_.StatSpellHaste,_.StatMastery],defaults:{gear:re.gear,epWeights:q.fromMap({[_.StatIntellect]:1.48,[_.StatAgility]:1.59,[_.StatStrength]:1.1,[_.StatSpellPower]:1.13,[_.StatSpellHit]:0,[_.StatSpellCrit]:.91,[_.StatSpellHaste]:.37,[_.StatAttackPower]:1,[_.StatMeleeHit]:1.38,[_.StatMeleeCrit]:.81,[_.StatMeleeHaste]:1.61,[_.StatExpertise]:0},{[J.PseudoStatMainHandDps]:5.21,[J.PseudoStatOffHandDps]:2.21}),other:Se,consumes:me,talents:de.data,specOptions:ce,raidBuffs:ge,partyBuffs:K.create({}),individualBuffs:$.create({vampiricTouch:!0}),debuffs:fe},playerIconInputs:[ee(),te(),se],includeBuffDebuffInputs:[p,d,c],excludeBuffDebuffInputs:[S],otherInputs:{inputs:[ne,m,g,f]},itemSwapSlots:[Q.ItemSlotMainHand,Q.ItemSlotOffHand],customSections:[ae,function(n,i){const l=new e(n,"fire-elemental-settings",{header:{title:"Fire Elemental"}}),o=u.newGroupContainer();o.classList.add("fire-elemental-icon-container"),l.bodyElement.appendChild(o);const r=t({getModObject:e=>e,getValue:e=>e.getClassOptions().totems||O.create(),setValue:(e,t,a)=>{const s=t.getClassOptions();s.totems=a,t.setClassOptions(e,s),t.rotationChangeEmitter.emit(e)},changeEmitter:e=>e.specOptionsChangeEmitter},y.fromSpellId(2894),"useFireElemental");return new a(o,i.player,r),new s(l.bodyElement,i.player,{positive:!0,label:"Bonus spell power",labelTooltip:"Bonus spell power to snapshot Fire Elemental with. Will prioritize dropping Fire Elemental if greater then 0",inline:!0,getValue:e=>e.getClassOptions().totems?.bonusSpellpower||0,setValue:(e,t,a)=>{const s=t.getClassOptions();s.totems&&(s.totems.bonusSpellpower=a),t.setClassOptions(e,s)},changedEvent:e=>e.specOptionsChangeEmitter}),new w(l.bodyElement,i.player,{label:"Use Tier 10 (4pc)",labelTooltip:"Will use Tier 10 (4pc) to snapshot Fire Elemental.",inline:!0,getValue:e=>e.getClassOptions().totems?.enhTierTenBonus||!1,setValue:(e,t,a)=>{const s=t.getClassOptions();s.totems&&(s.totems.enhTierTenBonus=a),t.setClassOptions(e,s)},changedEvent:e=>e.currentStatsEmitter,showWhen:e=>e.getCurrentStats().sets.includes("Frost Witch's Battlegear (4pc)")}),l}],encounterPicker:{showExecuteProportion:!1},presets:{talents:[de],rotations:[pe],gear:[oe,re]},autoRotation:e=>pe.rotation.rotation,raidSimPresets:[{spec:X.SpecEnhancementShaman,talents:de.data,specOptions:ce,consumes:me,defaultFactionRaces:{[Y.Unknown]:Z.RaceUnknown,[Y.Alliance]:Z.RaceDraenei,[Y.Horde]:Z.RaceOrc},defaultGear:{[Y.Unknown]:{},[Y.Alliance]:{1:re.gear},[Y.Horde]:{1:re.gear}},otherDefaults:Se}]});class ue extends h{constructor(e,t){super(e,t,he)}}export{ue as E};
//# sourceMappingURL=sim-CtPT6g4F.chunk.js.map
