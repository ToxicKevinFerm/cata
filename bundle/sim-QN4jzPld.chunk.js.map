{"version":3,"file":"sim-QN4jzPld.chunk.js","sources":["../../../ui/mage/fire/inputs.ts","../../../ui/mage/fire/presets.ts","../../../ui/mage/fire/sim.ts"],"sourcesContent":["import * as InputHelpers from '../../core/components/input_helpers';\nimport { Player } from '../../core/player';\nimport { Spec } from '../../core/proto/common';\nimport { TypedEvent } from '../../core/typed_event';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const MageRotationConfig = {\n\tinputs: [\n\t\t// ********************************************************\n\t\t//                       FIRE INPUTS\n\t\t// ********************************************************\n\t\t// InputHelpers.makeRotationEnumInput<Spec.SpecFireMage, PrimaryFireSpell>({\n\t\t// \tfieldName: 'primaryFireSpell',\n\t\t// \tlabel: 'Primary Spell',\n\t\t// \tvalues: [\n\t\t// \t\t{ name: 'Fireball', value: PrimaryFireSpell.Fireball },\n\t\t// \t\t{ name: 'Frostfire Bolt', value: PrimaryFireSpell.FrostfireBolt },\n\t\t// \t\t{ name: 'Scorch', value: PrimaryFireSpell.Scorch },\n\t\t// \t],\n\t\t// \tshowWhen: (player: Player<Spec.SpecFireMage>) => player.getTalentTree() == 1,\n\t\t// \tchangeEmitter: (player: Player<Spec.SpecFireMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t// }),\n\n\t\t// InputHelpers.makeRotationBooleanInput<Spec.SpecFireMage>({\n\t\t// \tfieldName: 'maintainImprovedScorch',\n\t\t// \tlabel: 'Maintain Imp. Scorch',\n\t\t// \tlabelTooltip: 'Always use Scorch when below 5 stacks, or < 4s remaining on debuff.',\n\t\t// \tshowWhen: (player: Player<Spec.SpecFireMage>) => player.getTalents().improvedScorch > 0,\n\t\t// \tchangeEmitter: (player: Player<Spec.SpecFireMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t// }),\n\t],\n};\n","import * as PresetUtils from '../../core/preset_utils';\nimport { Conjured, Consumes, Debuffs, Flask, Food, Glyphs, Potions, Profession, RaidBuffs, Spec } from '../../core/proto/common';\nimport {\n\tFireMage_Options as MageOptions,\n\tMageMajorGlyph as MajorGlyph,\n\tMageMinorGlyph as MinorGlyph,\n\tMagePrimeGlyph as PrimeGlyph,\n} from '../../core/proto/mage';\nimport { SavedTalents } from '../../core/proto/ui';\nimport FireApl from './apls/fire.apl.json';\n//import FireAoeApl from './apls/fire_aoe.apl.json';\nimport P1FireGear from './gear_sets/p1_fire.gear.json';\n\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const FIRE_P1_PRESET = PresetUtils.makePresetGear('Fire P1 Preset', P1FireGear, { talentTree: 1 });\n\n/* export const DefaultSimpleRotation = MageRotation.create({\n\tprimaryFireSpell: PrimaryFireSpell.Fireball,\n\tmaintainImprovedScorch: false,\n}); */\n\n//export const ROTATION_PRESET_SIMPLE = PresetUtils.makePresetSimpleRotation('Simple Default', Spec.SpecFireMage, DefaultSimpleRotation);\nexport const FIRE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Fire', FireApl, { talentTree: 1 });\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const FireTalents = {\n\tname: 'Fire',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '203-230330221120121213031-03',\n\t\tglyphs: Glyphs.create({\n\t\t\tprime1: PrimeGlyph.GlyphOfFireball,\n\t\t\tprime2: PrimeGlyph.GlyphOfPyroblast,\n\t\t\tprime3: PrimeGlyph.GlyphOfMoltenArmor,\n\t\t\tmajor1: MajorGlyph.GlyphOfEvocation,\n\t\t\tmajor2: MajorGlyph.GlyphOfDragonSBreath,\n\t\t\tmajor3: MajorGlyph.GlyphOfInvisibility,\n\t\t\tminor1: MinorGlyph.GlyphOfMirrorImage,\n\t\t\tminor2: MinorGlyph.GlyphOfArmors,\n\t\t\tminor3: MinorGlyph.GlyphOfTheMonkey,\n\t\t}),\n\t}),\n};\n\nexport const DefaultFireOptions = MageOptions.create({\n\tclassOptions: {\n\t},\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\tbloodlust: true,\n\tmarkOfTheWild: true,\n\ticyTalons: true,\n\tmoonkinForm: true,\n\tleaderOfThePack: true,\n\tpowerWordFortitude: true,\n\tstrengthOfEarthTotem: true,\n\ttrueshotAura: true,\n\twrathOfAirTotem: true,\n\tdemonicPact: true,\n\tblessingOfKings: true,\n\tblessingOfMight: true,\n\tcommunion: true,\n});\n\nexport const DefaultFireConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheDraconicMind,\n\tfood: Food.FoodSeafoodFeast,\n\tdefaultPotion: Potions.VolcanicPotion,\n\tprepopPotion: Potions.VolcanicPotion,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n    ebonPlaguebringer: true,\n    shadowAndFlame: true,\n    judgement: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 20,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n};\n","import * as OtherInputs from '../../core/components/other_inputs';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl';\nimport { Faction, IndividualBuffs, PartyBuffs, Race, Spec, Stat } from '../../core/proto/common';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as MageInputs from '../inputs';\nimport * as FireInputs from './inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecFireMage, {\n\tcssClass: 'fire-mage-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Mage),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect,\n\t\t\t  Stat.StatSpirit,\n\t\t\t  Stat.StatSpellPower,\n\t\t\t  Stat.StatSpellHit,\n\t\t\t  Stat.StatSpellCrit,\n\t\t\t  Stat.StatSpellHaste,\n\t\t\t  Stat.StatMastery,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMastery,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecFireMage>) => {\n\t// \tlet stats = new Stats();\n\n\t// \tif (player.getTalentTree() === 0) {\n\t// \t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().arcaneFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t// \t}\n\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.FIRE_P1_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.48,\n\t\t\t[Stat.StatSpirit]: 0.42,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.38,\n\t\t\t[Stat.StatSpellCrit]: 0.58,\n\t\t\t[Stat.StatSpellHaste]: 0.94,\n\t\t\t[Stat.StatMastery]: 0.8\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultFireConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.FireTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultFireOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t\tmanaTideTotems: 1,\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tinnervateCount: 0,\n\t\t\tvampiricTouch: true,\n\t\t\tfocusMagic: true,\n\t\t}),\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [],\n\t// Inputs to include in the 'Rotation' section on the settings tab.\n\trotationInputs: FireInputs.MageRotationConfig,\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\t//Should add hymn of hope, revitalize, and\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.InputDelay, OtherInputs.DistanceFromTarget, OtherInputs.TankAssignment, OtherInputs.DarkIntentUptime],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: true,\n\t},\n\n\tpresets: {\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.FIRE_ROTATION_PRESET_DEFAULT],\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.FireTalents],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.FIRE_P1_PRESET],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecFireMage>): APLRotation => {\n\t\t/*const numTargets = player.sim.encounter.targets.length;\n \t\tif (numTargets > 3) {\n\t\t\treturn Presets.FIRE_ROTATION_PRESET_AOE.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.FIRE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t} */\n\t\treturn Presets.FIRE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecFireMage,\n\t\t\ttalents: Presets.FireTalents.data,\n\t\t\tspecOptions: Presets.DefaultFireOptions,\n\t\t\tconsumes: Presets.DefaultFireConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.FIRE_P1_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.FIRE_P1_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class FireMageSimUI extends IndividualSimUI<Spec.SpecFireMage> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecFireMage>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["FIRE_P1_PRESET","PresetUtils.makePresetGear","talentTree","FIRE_ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","FireApl","FireTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","prime1","PrimeGlyph","GlyphOfFireball","prime2","GlyphOfPyroblast","prime3","GlyphOfMoltenArmor","major1","MajorGlyph","GlyphOfEvocation","major2","GlyphOfDragonSBreath","major3","GlyphOfInvisibility","minor1","MinorGlyph","GlyphOfMirrorImage","minor2","GlyphOfArmors","minor3","GlyphOfTheMonkey","DefaultFireOptions","MageOptions","classOptions","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","DefaultFireConsumes","Consumes","flask","Flask","FlaskOfTheDraconicMind","food","Food","FoodSeafoodFeast","defaultPotion","Potions","VolcanicPotion","prepopPotion","DefaultDebuffs","Debuffs","ebonPlaguebringer","shadowAndFlame","judgement","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","Spec","SpecFireMage","cssClass","cssScheme","PlayerClasses","getCssClass","Mage","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMastery","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.FIRE_P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultFireConsumes","talents","Presets.FireTalents","specOptions","Presets.DefaultFireOptions","other","Presets.OtherDefaults","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","manaTideTotems","individualBuffs","IndividualBuffs","innervateCount","vampiricTouch","focusMagic","debuffs","Presets.DefaultDebuffs","playerIconInputs","rotationInputs","inputs","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.InputDelay","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","OtherInputs.DarkIntentUptime","encounterPicker","showExecuteProportion","presets","rotations","Presets.FIRE_ROTATION_PRESET_DEFAULT","autoRotation","player","rotation","raidSimPresets","spec","otherDefaults","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceGnome","Horde","RaceTroll","defaultGear","FireMageSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}