{"version":3,"file":"sim-B0awEHt-.chunk.js","sources":["../../../ui/rogue/subtlety/inputs.ts","../../../ui/rogue/subtlety/presets.ts","../../../ui/rogue/subtlety/sim.ts"],"sourcesContent":["import * as InputHelpers from '../../core/components/input_helpers';\nimport { Player } from '../../core/player';\nimport { Spec } from '../../core/proto/common';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const HonorAmongThievesCritRate = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecSubtletyRogue>({\n\tfieldName: 'honorAmongThievesCritRate',\n\tlabel: 'Honor of Thieves Crit Rate',\n\tlabelTooltip: 'Number of crits other group members generate within 100 seconds',\n\tshowWhen: (player: Player<Spec.SpecSubtletyRogue>) => player.getTalents().honorAmongThieves > 0,\n});\n","import * as PresetUtils from '../../core/preset_utils';\nimport { Conjured, Consumes, Flask, Food, Glyphs, Potions } from '../../core/proto/common';\nimport { RogueMajorGlyph, RogueOptions_PoisonImbue, RoguePrimeGlyph,SubtletyRogue_Options as RogueOptions } from '../../core/proto/rogue';\nimport { SavedTalents } from '../../core/proto/ui';\nimport SubtletyApl from './apls/subtlety.apl.json'\nimport P1SubtletyGear from './gear_sets/p1_subtlety.gear.json'\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const P1_PRESET_SUB = PresetUtils.makePresetGear('P1 Sub', P1SubtletyGear);\n\nexport const ROTATION_PRESET_SUBTLETY = PresetUtils.makePresetAPLRotation('Subtlety', SubtletyApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\n\nexport const SubtletyTalents = {\n\tname: 'Subtlety',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '023003-002-0332031321310012321',\n\t\tglyphs: Glyphs.create({\n\t\t\tprime1: RoguePrimeGlyph.GlyphOfBackstab,\n\t\t\tprime2: RoguePrimeGlyph.GlyphOfHemorrhage,\n\t\t\tprime3: RoguePrimeGlyph.GlyphOfSliceAndDice,\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfSprint,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfFeint,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = RogueOptions.create({\n\tclassOptions: {\n\t\tmhImbue: RogueOptions_PoisonImbue.InstantPoison,\n\t\tohImbue: RogueOptions_PoisonImbue.DeadlyPoison,\n\t\tthImbue: RogueOptions_PoisonImbue.WoundPoison,\n\t\tapplyPoisonsManually: false,\n\t\tstartingOverkillDuration: 20,\n\t\tvanishBreakTime: 0.1,\n\t},\n\thonorAmongThievesCritRate: 400,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfTheTolvir,\n\tprepopPotion: Potions.PotionOfTheTolvir,\n\tdefaultConjured: Conjured.ConjuredRogueThistleTea,\n\tflask: Flask.FlaskOfTheWinds,\n\tfood: Food.FoodSkeweredEel,\n});\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs';\nimport * as OtherInputs from '../../core/components/other_inputs';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl';\nimport {\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tItemSlot,\n\tPartyBuffs,\n\tPseudoStat,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n} from '../../core/proto/common';\nimport { RogueOptions_PoisonImbue } from '../../core/proto/rogue';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as RogueInputs from '../inputs';\nimport * as SubInputs from './inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecSubtletyRogue, {\n\tcssClass: 'subtlety-rogue-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Rogue),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: ['Rotations are not fully optimized, especially for non-standard setups.'],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatAgility,\n\t\tStat.StatStrength,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatMastery,\n\t\tStat.StatExpertise,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps, PseudoStat.PseudoStatOffHandDps],\n\t// Reference stat against which to calculate EP.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatStamina,\n\t\tStat.StatAgility,\n\t\tStat.StatStrength,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatMastery,\n\t\tStat.StatExpertise,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_PRESET_SUB.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatAgility]: 3.70,\n\t\t\t\t[Stat.StatStrength]: 1.05,\n\t\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t\t[Stat.StatSpellCrit]: 0.06,\n\t\t\t\t[Stat.StatSpellHit]: 0.36,\n\t\t\t\t[Stat.StatMeleeHit]: 0.77,\n\t\t\t\t[Stat.StatMeleeCrit]: 1.04,\n\t\t\t\t[Stat.StatMeleeHaste]: 1.27,\n\t\t\t\t[Stat.StatMastery]: 0.79,\n\t\t\t\t[Stat.StatExpertise]: 1.33,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 7.00,\n\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 1.00,\n\t\t\t},\n\t\t),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.SubtletyTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tmangle: true,\n\t\t\tsunderArmor: true,\n\t\t\tshadowAndFlame: true,\n\t\t\tearthAndMoon: true,\n\t\t\tbloodFrenzy: true,\n\t\t}),\n\t},\n\n\tplayerInputs: {\n\t\tinputs: [RogueInputs.ApplyPoisonsManually()],\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [RogueInputs.MainHandImbue(), RogueInputs.OffHandImbue(), RogueInputs.ThrownImbue()],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.CritBuff,\n\t\tBuffDebuffInputs.SpellCritDebuff,\n\t\tBuffDebuffInputs.SpellDamageDebuff,\n\t\tBuffDebuffInputs.MajorArmorDebuff,\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\t// RogueInputs.StartingOverkillDuration(),\n\t\t\t// RogueInputs.VanishBreakTime(),\n\t\t\tRogueInputs.AssumeBleedActive(),\n\t\t\tSubInputs.HonorAmongThievesCritRate,\n\t\t\t// OtherInputs.TankAssignment,\n\t\t\t// OtherInputs.InFrontOfTarget,\n\t\t\tOtherInputs.InputDelay,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.SubtletyTalents],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.ROTATION_PRESET_SUBTLETY],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [Presets.P1_PRESET_SUB],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecSubtletyRogue>): APLRotation => {\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets >= 5) {\n\t\t\treturn Presets.ROTATION_PRESET_SUBTLETY.rotation.rotation!;\n\t\t} else {\n\t\t\t// TODO: Need a sub rotation here\n\t\t\treturn Presets.ROTATION_PRESET_SUBTLETY.rotation.rotation!;\n\t\t}\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecSubtletyRogue,\n\t\t\ttalents: Presets.SubtletyTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET_SUB.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET_SUB.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class SubtletyRogueSimUI extends IndividualSimUI<Spec.SpecSubtletyRogue> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecSubtletyRogue>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t\tthis.player.changeEmitter.on(c => {\n\t\t\tconst options = this.player.getSpecOptions();\n\t\t\tconst encounter = this.sim.encounter;\n\t\t\tif (!options.classOptions!.applyPoisonsManually) {\n\t\t\t\tconst mhWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\n\t\t\t\tconst ohWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\n\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (encounter.targets.length > 3) {\n\t\t\t\t\toptions.classOptions!.mhImbue = RogueOptions_PoisonImbue.InstantPoison;\n\t\t\t\t\toptions.classOptions!.ohImbue = RogueOptions_PoisonImbue.InstantPoison;\n\t\t\t\t} else {\n\t\t\t\t\tif (mhWeaponSpeed <= ohWeaponSpeed) {\n\t\t\t\t\t\toptions.classOptions!.mhImbue = RogueOptions_PoisonImbue.DeadlyPoison;\n\t\t\t\t\t\toptions.classOptions!.ohImbue = RogueOptions_PoisonImbue.InstantPoison;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.classOptions!.mhImbue = RogueOptions_PoisonImbue.InstantPoison;\n\t\t\t\t\t\toptions.classOptions!.ohImbue = RogueOptions_PoisonImbue.DeadlyPoison;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.player.setSpecOptions(c, options);\n\t\t});\n\t\tthis.sim.encounter.changeEmitter.on(c => {\n\t\t\tconst options = this.player.getSpecOptions();\n\t\t\tconst encounter = this.sim.encounter;\n\t\t\tif (!options.classOptions!.applyPoisonsManually) {\n\t\t\t\tconst mhWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\n\t\t\t\tconst ohWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\n\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (encounter.targets.length > 3) {\n\t\t\t\t\toptions.classOptions!.mhImbue = RogueOptions_PoisonImbue.InstantPoison;\n\t\t\t\t\toptions.classOptions!.ohImbue = RogueOptions_PoisonImbue.InstantPoison;\n\t\t\t\t} else {\n\t\t\t\t\tif (mhWeaponSpeed <= ohWeaponSpeed) {\n\t\t\t\t\t\toptions.classOptions!.mhImbue = RogueOptions_PoisonImbue.DeadlyPoison;\n\t\t\t\t\t\toptions.classOptions!.ohImbue = RogueOptions_PoisonImbue.InstantPoison;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.classOptions!.mhImbue = RogueOptions_PoisonImbue.InstantPoison;\n\t\t\t\t\t\toptions.classOptions!.ohImbue = RogueOptions_PoisonImbue.DeadlyPoison;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.player.setSpecOptions(c, options);\n\t\t});\n\t}\n}\n"],"names":["HonorAmongThievesCritRate","InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","showWhen","player","getTalents","honorAmongThieves","P1_PRESET_SUB","PresetUtils.makePresetGear","ROTATION_PRESET_SUBTLETY","PresetUtils.makePresetAPLRotation","SubtletyApl","SubtletyTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","prime1","RoguePrimeGlyph","GlyphOfBackstab","prime2","GlyphOfHemorrhage","prime3","GlyphOfSliceAndDice","major1","RogueMajorGlyph","GlyphOfTricksOfTheTrade","major2","GlyphOfSprint","major3","GlyphOfFeint","DefaultOptions","RogueOptions","classOptions","mhImbue","RogueOptions_PoisonImbue","InstantPoison","ohImbue","DeadlyPoison","thImbue","WoundPoison","applyPoisonsManually","startingOverkillDuration","vanishBreakTime","honorAmongThievesCritRate","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfTheTolvir","prepopPotion","defaultConjured","Conjured","ConjuredRogueThistleTea","flask","Flask","FlaskOfTheWinds","food","Food","FoodSkeweredEel","SPEC_CONFIG","registerSpecConfig","Spec","SpecSubtletyRogue","cssClass","cssScheme","PlayerClasses","getCssClass","Rogue","knownIssues","epStats","Stat","StatAgility","StatStrength","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatSpellHit","StatSpellCrit","StatMeleeHaste","StatMastery","StatExpertise","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","gear","Presets.P1_PRESET_SUB","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.SubtletyTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","debuffs","Debuffs","mangle","sunderArmor","shadowAndFlame","earthAndMoon","bloodFrenzy","playerInputs","inputs","RogueInputs.ApplyPoisonsManually","playerIconInputs","RogueInputs.MainHandImbue","RogueInputs.OffHandImbue","RogueInputs.ThrownImbue","includeBuffDebuffInputs","BuffDebuffInputs.CritBuff","BuffDebuffInputs.SpellCritDebuff","BuffDebuffInputs.SpellDamageDebuff","BuffDebuffInputs.MajorArmorDebuff","excludeBuffDebuffInputs","otherInputs","RogueInputs.AssumeBleedActive","SubInputs.HonorAmongThievesCritRate","OtherInputs.InputDelay","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_SUBTLETY","autoRotation","sim","encounter","targets","length","rotation","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceOrc","defaultGear","SubtletyRogueSimUI","IndividualSimUI","constructor","parentElem","super","this","changeEmitter","on","c","options","getSpecOptions","mhWeaponSpeed","getGear","getEquippedItem","ItemSlot","ItemSlotMainHand","item","weaponSpeed","ohWeaponSpeed","ItemSlotOffHand","setSpecOptions"],"mappings":"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"}