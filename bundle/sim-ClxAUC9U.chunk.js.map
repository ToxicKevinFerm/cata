{"version":3,"file":"sim-ClxAUC9U.chunk.js","sources":["../../../ui/paladin/retribution/presets.ts","../../../ui/paladin/retribution/sim.ts"],"sourcesContent":["import * as PresetUtils from '../../core/preset_utils.js';\nimport { Consumes, Flask, Food, Glyphs, Potions, Profession, TinkerHands } from '../../core/proto/common.js';\nimport {\n\tPaladinAura as PaladinAura,\n\tPaladinJudgement as PaladinJudgement,\n\tPaladinMajorGlyph,\n\tPaladinMinorGlyph,\n\tPaladinPrimeGlyph,\n\tRetributionPaladin_Options as RetributionPaladinOptions,\n} from '../../core/proto/paladin.js';\nimport { SavedTalents } from '../../core/proto/ui.js';\nimport DefaultApl from './apls/default.apl.json';\nimport P1_BisRetGear from './gear_sets/p1_bis.gear.json';\nimport P1_NonHcRetGear from './gear_sets/p1_nonhc.gear.json';\nimport PreraidRetGear from './gear_sets/preraid.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_RET_PRESET = PresetUtils.makePresetGear('Preraid', PreraidRetGear);\nexport const P1_NONHC_RET_PRESET = PresetUtils.makePresetGear('P1 non-Hc', P1_NonHcRetGear);\nexport const P1_BIS_RET_PRESET = PresetUtils.makePresetGear('P1 BiS', P1_BisRetGear);\n\nexport const ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/cata/talent-calc and copy the numbers in the url.\nexport const RetTalents = {\n\tname: 'Ret',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '203002-02-23203213211113002311',\n\t\tglyphs: Glyphs.create({\n\t\t\tprime1: PaladinPrimeGlyph.GlyphOfSealOfTruth,\n\t\t\tprime2: PaladinPrimeGlyph.GlyphOfExorcism,\n\t\t\tprime3: PaladinPrimeGlyph.GlyphOfTemplarSVerdict,\n\t\t\tmajor1: PaladinMajorGlyph.GlyphOfTheAsceticCrusader,\n\t\t\tmajor2: PaladinMajorGlyph.GlyphOfHammerOfWrath,\n\t\t\tmajor3: PaladinMajorGlyph.GlyphOfConsecration,\n\t\t\tminor1: PaladinMinorGlyph.GlyphOfRighteousness,\n\t\t\tminor2: PaladinMinorGlyph.GlyphOfTruth,\n\t\t\tminor3: PaladinMinorGlyph.GlyphOfBlessingOfMight,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = RetributionPaladinOptions.create({\n\tclassOptions: {\n\t\taura: PaladinAura.RetributionAura,\n\t\tjudgement: PaladinJudgement.JudgementOfWisdom,\n\t},\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTitanicStrength,\n\tfood: Food.FoodBeerBasedCrocolisk,\n\tdefaultPotion: Potions.GolembloodPotion,\n\tprepopPotion: Potions.GolembloodPotion,\n\ttinkerHands: TinkerHands.TinkerHandsSynapseSprings,\n});\n\nexport const OtherDefaults = {\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Jewelcrafting,\n\tdistanceFromTarget: 5,\n};\n","import * as BuffDebuffInputs from '../../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../../core/components/other_inputs.js';\nimport * as Mechanics from '../../core/constants/mechanics.js';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui.js';\nimport { Player } from '../../core/player.js';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl.js';\nimport { Debuffs, Faction, IndividualBuffs, PartyBuffs, PseudoStat, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../../core/proto/common.js';\nimport { Stats } from '../../core/proto_utils/stats.js';\nimport { TypedEvent } from '../../core/typed_event.js';\nimport * as PaladinInputs from '../inputs.js';\n// import * as RetInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecRetributionPaladin, {\n\tcssClass: 'retribution-paladin-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Paladin),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatIntellect,\n\t\tStat.StatMP5,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatExpertise,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMastery,\n\t],\n\tepPseudoStats: [PseudoStat.PseudoStatMainHandDps],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatIntellect,\n\t\tStat.StatMP5,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatExpertise,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatMana,\n\t\tStat.StatHealth,\n\t\tStat.StatMastery,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecRetributionPaladin>) => {\n\t// \tlet stats = new Stats();\n\n\t// \tTypedEvent.freezeAllAndDo(() => {\n\t// \t\tif (\n\t// \t\t\tplayer.getMajorGlyphs().includes(PaladinMajorGlyph.GlyphOfSealOfVengeance) &&\n\t// \t\t\tplayer.getSpecOptions().classOptions?.seal == PaladinSeal.Vengeance\n\t// \t\t) {\n\t// \t\t\tstats = stats.addStat(Stat.StatExpertise, 10 * Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION);\n\t// \t\t}\n\t// \t});\n\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.PRERAID_RET_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap(\n\t\t\t{\n\t\t\t\t[Stat.StatStrength]: 2.53,\n\t\t\t\t[Stat.StatAgility]: 1.13,\n\t\t\t\t[Stat.StatIntellect]: 0.15,\n\t\t\t\t[Stat.StatSpellPower]: 0.32,\n\t\t\t\t[Stat.StatSpellHit]: 0.41,\n\t\t\t\t[Stat.StatSpellCrit]: 0.01,\n\t\t\t\t[Stat.StatSpellHaste]: 0.12,\n\t\t\t\t[Stat.StatMP5]: 0.05,\n\t\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t\t[Stat.StatMeleeHit]: 1.96,\n\t\t\t\t[Stat.StatMeleeCrit]: 1.16,\n\t\t\t\t[Stat.StatMeleeHaste]: 1.44,\n\t\t\t\t[Stat.StatExpertise]: 1.8,\n\t\t\t},\n\t\t\t{\n\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 7.33,\n\t\t\t},\n\t\t),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.RetTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({}),\n\t\tdebuffs: Debuffs.create({\n\t\t\texposeArmor: true,\n\t\t\tbloodFrenzy: true,\n\t\t\tmangle: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tcriticalMass: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tPaladinInputs.AuraSelection(),\n\t\tPaladinInputs.JudgementSelection(),\n\t\t//PaladinInputs.StartingSealSelection()\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [BuffDebuffInputs.ReplenishmentBuff],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.InputDelay, OtherInputs.TankAssignment, OtherInputs.InFrontOfTarget],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\trotations: [Presets.ROTATION_PRESET_DEFAULT],\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.RetTalents],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_RET_PRESET,\n\t\t\tPresets.P1_NONHC_RET_PRESET,\n\t\t\tPresets.P1_BIS_RET_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecRetributionPaladin>): APLRotation => {\n\t\treturn Presets.ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecRetributionPaladin,\n\t\t\ttalents: Presets.RetTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.PRERAID_RET_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.PRERAID_RET_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class RetributionPaladinSimUI extends IndividualSimUI<Spec.SpecRetributionPaladin> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRetributionPaladin>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["PRERAID_RET_PRESET","PresetUtils.makePresetGear","P1_NONHC_RET_PRESET","P1_NonHcRetGear","P1_BIS_RET_PRESET","P1_BisRetGear","ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","RetTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","prime1","PaladinPrimeGlyph","GlyphOfSealOfTruth","prime2","GlyphOfExorcism","prime3","GlyphOfTemplarSVerdict","major1","PaladinMajorGlyph","GlyphOfTheAsceticCrusader","major2","GlyphOfHammerOfWrath","major3","GlyphOfConsecration","minor1","PaladinMinorGlyph","GlyphOfRighteousness","minor2","GlyphOfTruth","minor3","GlyphOfBlessingOfMight","DefaultOptions","RetributionPaladinOptions","classOptions","aura","PaladinAura","RetributionAura","judgement","PaladinJudgement","JudgementOfWisdom","DefaultConsumes","Consumes","flask","Flask","FlaskOfTitanicStrength","food","Food","FoodBeerBasedCrocolisk","defaultPotion","Potions","GolembloodPotion","prepopPotion","tinkerHands","TinkerHands","TinkerHandsSynapseSprings","Profession","Engineering","Jewelcrafting","SPEC_CONFIG","registerSpecConfig","Spec","SpecRetributionPaladin","cssClass","cssScheme","PlayerClasses","getCssClass","Paladin","knownIssues","epStats","Stat","StatStrength","StatAgility","StatIntellect","StatMP5","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatExpertise","StatSpellPower","StatSpellCrit","StatSpellHit","StatSpellHaste","StatMastery","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatMana","StatHealth","defaults","gear","Presets.PRERAID_RET_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.RetTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","debuffs","Debuffs","exposeArmor","bloodFrenzy","mangle","ebonPlaguebringer","criticalMass","playerIconInputs","PaladinInputs.AuraSelection","PaladinInputs.JudgementSelection","includeBuffDebuffInputs","BuffDebuffInputs.ReplenishmentBuff","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.InputDelay","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_DEFAULT","Presets.P1_NONHC_RET_PRESET","Presets.P1_BIS_RET_PRESET","autoRotation","_player","rotation","raidSimPresets","spec","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceBloodElf","defaultGear","RetributionPaladinSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"2pEAoBaA,EAAqBC,EAA2B,4kBAChDC,EAAsBD,EAA2B,YAAaE,GAC9DC,EAAoBH,EAA2B,SAAUI,GAEzDC,EAA0BC,EAAkC,UAAWC,GAIvEC,EAAa,CACzBC,KAAM,MACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,iCACfC,OAAQC,EAAOH,OAAO,CACrBI,OAAQC,EAAkBC,mBAC1BC,OAAQF,EAAkBG,gBAC1BC,OAAQJ,EAAkBK,uBAC1BC,OAAQC,EAAkBC,0BAC1BC,OAAQF,EAAkBG,qBAC1BC,OAAQJ,EAAkBK,oBAC1BC,OAAQC,EAAkBC,qBAC1BC,OAAQF,EAAkBG,aAC1BC,OAAQJ,EAAkBK,4BAKhBC,EAAiBC,EAA0B1B,OAAO,CAC9D2B,aAAc,CACbC,KAAMC,EAAYC,gBAClBC,UAAWC,EAAiBC,qBAIjBC,EAAkBC,EAASnC,OAAO,CAC9CoC,MAAOC,EAAMC,uBACbC,KAAMC,EAAKC,uBACXC,cAAeC,EAAQC,iBACvBC,aAAcF,EAAQC,iBACtBE,YAAaC,EAAYC,4BAIZC,EAAWC,YACXD,EAAWE,cCjDzB,MAAMC,EAAcC,EAAmBC,EAAKC,uBAAwB,CACnEC,SAAU,6BACVC,UAAWC,EAAcC,YAAYD,EAAcE,SAEnDC,YAAa,GAGbC,QAAS,CACRC,EAAKC,aACLD,EAAKE,YACLF,EAAKG,cACLH,EAAKI,QACLJ,EAAKK,gBACLL,EAAKM,aACLN,EAAKO,cACLP,EAAKQ,eACLR,EAAKS,cACLT,EAAKU,eACLV,EAAKW,cACLX,EAAKY,aACLZ,EAAKa,eACLb,EAAKc,aAENC,cAAe,CAACC,EAAWC,uBAE3BC,gBAAiBlB,EAAKK,gBAEtBc,aAAc,CACbnB,EAAKC,aACLD,EAAKE,YACLF,EAAKG,cACLH,EAAKI,QACLJ,EAAKK,gBACLL,EAAKM,aACLN,EAAKO,cACLP,EAAKQ,eACLR,EAAKS,cACLT,EAAKa,eACLb,EAAKU,eACLV,EAAKW,cACLX,EAAKY,aACLZ,EAAKoB,SACLpB,EAAKqB,WACLrB,EAAKc,aAmBNQ,SAAU,CAETC,KAAMC,EAA2BD,KAEjCE,UAAWC,EAAMC,QAChB,CACC,CAAC3B,EAAKC,cAAe,KACrB,CAACD,EAAKE,aAAc,KACpB,CAACF,EAAKG,eAAgB,IACtB,CAACH,EAAKU,gBAAiB,IACvB,CAACV,EAAKY,cAAe,IACrB,CAACZ,EAAKW,eAAgB,IACtB,CAACX,EAAKa,gBAAiB,IACvB,CAACb,EAAKI,SAAU,IAChB,CAACJ,EAAKK,iBAAkB,EACxB,CAACL,EAAKM,cAAe,KACrB,CAACN,EAAKO,eAAgB,KACtB,CAACP,EAAKQ,gBAAiB,KACvB,CAACR,EAAKS,eAAgB,KAEvB,CACC,CAACO,EAAWC,uBAAwB,OAItCW,SAAUC,EAEVC,QAASC,EAAmBhG,KAE5BiG,YAAaC,EAEbC,UAAWC,EAAUlG,OAAO,CAC3BmG,kBAAkB,EAClBC,WAAW,EACXC,eAAe,EACfC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,oBAAoB,EACpBC,sBAAsB,EACtBC,cAAc,EACdC,iBAAiB,EACjBC,aAAa,EACbC,iBAAiB,EACjBC,iBAAiB,EACjBC,WAAW,IAEZC,WAAYC,EAAWlH,OAAO,IAC9BmH,gBAAiBC,EAAgBpH,OAAO,IACxCqH,QAASC,EAAQtH,OAAO,CACvBuH,aAAa,EACbC,aAAa,EACbC,QAAQ,EACRC,mBAAmB,EACnBC,cAAc,KAKhBC,iBAAkB,CACjBC,IACAC,KAIDC,wBAAyB,CAACC,GAC1BC,wBAAyB,GAEzBC,YAAa,CACZC,OAAQ,CAACC,EAAwBC,EAA4BC,IAE9DC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CACRC,UAAW,CAACC,GAEZ9C,QAAS,CAACC,GAEVR,KAAM,CACLC,EACAqD,EACAC,IAIFC,aAAeC,GACPJ,EAAgCK,SAASA,SAGjDC,eAAgB,CACf,CACCC,KAAM5F,EAAKC,uBACXsC,QAASC,EAAmBhG,KAC5BiG,YAAaC,EACbL,SAAUC,EACVuD,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,UACzB,CAACL,EAAQM,OAAQJ,EAAKK,cAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGjE,EAA2BD,MAE/B,CAAC8D,EAAQM,OAAQ,CAChB,EAAGnE,EAA2BD,WAO5B,MAAMuE,UAAgCC,EAC5C,WAAAC,CAAYC,EAAyBC,GAC9BC,MAAAF,EAAYC,EAAQ7G,EAC3B"}