import{m as e,l as t,n as a,o as s,q as o,s as l,t as n,u as r,v as i,w as p,T as c,H as d,x as u,y as h,z as S,A as g,D as m,F as f,G as v,J as I}from"./preset_utils-Cf2AMUmT.chunk.js";import{Y as b,T as y,Z as P,_ as O,$ as H,a0 as A,a1 as T,G as w,a2 as C,a3 as B,a4 as k,a5 as R,a6 as D,a7 as E,a8 as G,a9 as M,aa as F,b as x,a as L,ab as U,ac as N,ad as z,ae as W,af as j,ag as K,ah as V,S as _,F as q,R as J}from"./detailed_results-Bq3U1zBE.chunk.js";t({fieldName:"defensiveDelay",label:"Defensives Delay",labelTooltip:"Minimum delay between using more defensive cooldowns."});const Y={inputs:[a({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:b.Blood},{name:"Frost",value:b.Frost},{name:"Unholy",value:b.Unholy}],changeEmitter:e=>y.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"opener",label:"Opener",labelTooltip:"Chose what opener to perform:<br>\t\t\t\t<b>Regular</b>: Regular opener.<br>\t\t\t\t<b>Threat</b>: Full IT spam for max threat.",values:[{name:"Regular",value:P.Regular},{name:"Threat",value:P.Threat}],changeEmitter:e=>y.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"optimizationSetting",label:"Optimization Setting",labelTooltip:"Chose what metric to optimize:<br>\t\t\t\t<b>Hps</b>: Prioritizes holding runes for healing after damage taken.<br>\t\t\t\t<b>Tps</b>: Prioritizes spending runes for icy touch spam.",values:[{name:"Hps",value:O.Hps},{name:"Tps",value:O.Tps}],changeEmitter:e=>y.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"bloodSpell",label:"Blood Spell",labelTooltip:"Chose what blood rune spender to use.",values:[{name:"Blood Strike",value:H.BloodStrike},{name:"Blood Boil",value:H.BloodBoil},{name:"Heart Strike",value:H.HeartStrike}],changeEmitter:e=>y.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"bloodTapPrio",label:"Blood Tap",labelTooltip:"Chose how to use Blood Tap:<br>\t\t\t\t<b>Use as Defensive Cooldown</b>: Use as defined in Cooldowns (Requires T10 4pc).<br>\t\t\t\t<b>Offensive</b>: Use Blood Tap for extra Icy Touches.",values:[{name:"Use as Defensive Cooldown",value:A.Defensive},{name:"Offensive",value:A.Offensive}],changeEmitter:e=>y.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])})]},Z={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-20s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"20%"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"40%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}}]}},castSpell:{spellId:{spellId:49222}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:48743}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},castSpell:{spellId:{itemId:65109}}}},{action:{condition:{or:{vals:[{not:{val:{dotIsActive:{spellId:{spellId:55095}}}}},{not:{val:{dotIsActive:{spellId:{spellId:55078}}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{nextRuneCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"2s"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{castSpell:{spellId:{spellId:46584}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"80"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{runeCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"1s"}}}},castSpell:{spellId:{spellId:45529}}}}]},$=s("P1",{items:[{id:65186,enchant:4206,gems:[52294,52233],reforging:124},{id:65059,reforging:124},{id:65188,enchant:4198,gems:[52221],reforging:125},{id:65010,enchant:1951,reforging:131},{id:65184,enchant:4103,gems:[52221,52242],reforging:129},{id:65143,enchant:4189,gems:[0],reforging:129},{id:65185,enchant:3860,gems:[52242,0],reforging:131},{id:65369,randomSuffix:-221,gems:[52233,52242]},{id:65187,enchant:3327,gems:[52221,52242],reforging:131},{id:65051,enchant:4223,gems:[52233],reforging:124},{id:65070,reforging:124},{id:65372,randomSuffix:-128,reforging:125},{id:65048},{id:65109},{id:65003,enchant:3368,reforging:145},{},{id:70128,gems:[52242],reforging:133}]}),Q=o("P1",Z),X={name:"Blood",data:T.create({talentsString:"03323000132222311321-3-013",glyphs:w.create({prime1:C.GlyphOfDeathStrike,prime2:C.GlyphOfHeartStrike,prime3:C.GlyphOfRuneStrike,major1:B.GlyphOfVampiricBlood,major2:B.GlyphOfDancingRuneWeapon,major3:B.GlyphOfBoneShield,minor1:k.GlyphOfDeathGate,minor2:k.GlyphOfPathOfFrost,minor3:k.GlyphOfHornOfWinter})})},ee=R.create({classOptions:{startingRunicPower:0}}),te=D.create({flask:E.FlaskOfSteelskin,food:G.FoodBeerBasedCrocolisk,defaultPotion:M.GolembloodPotion,prepopPotion:M.GolembloodPotion,tinkerHands:F.TinkerHandsSynapseSprings}),ae={profession1:x.Engineering,profession2:x.Leatherworking,distanceFromTarget:5},se=l(_.SpecBloodDeathKnight,{cssClass:"blood-death-knight-sim-ui",cssScheme:L.getCssClass(L.DeathKnight),knownIssues:["<p>Defensive CDs use is very basic and wip.</p>"],epStats:[U.StatStamina,U.StatStrength,U.StatAgility,U.StatAttackPower,U.StatExpertise,U.StatMeleeHit,U.StatMeleeCrit,U.StatMeleeHaste,U.StatSpellHit,U.StatSpellCrit,U.StatSpellHaste,U.StatHealth,U.StatArmor,U.StatBonusArmor,U.StatDodge,U.StatParry,U.StatSpellHit,U.StatNatureResistance,U.StatShadowResistance,U.StatFrostResistance,U.StatMastery],epPseudoStats:[N.PseudoStatMainHandDps,N.PseudoStatOffHandDps],epReferenceStat:U.StatAttackPower,displayStats:[U.StatHealth,U.StatArmor,U.StatStamina,U.StatStrength,U.StatAgility,U.StatAttackPower,U.StatExpertise,U.StatSpellHit,U.StatSpellCrit,U.StatMeleeHit,U.StatMeleeCrit,U.StatMeleeHaste,U.StatDodge,U.StatParry,U.StatMastery],defaults:{gear:$.gear,epWeights:z.fromMap({[U.StatArmor]:.05,[U.StatBonusArmor]:.03,[U.StatStamina]:1,[U.StatStrength]:.33,[U.StatAgility]:.6,[U.StatAttackPower]:.06,[U.StatExpertise]:.67,[U.StatMeleeHit]:.67,[U.StatMeleeCrit]:.28,[U.StatMeleeHaste]:.21,[U.StatDodge]:.7,[U.StatParry]:.58},{[N.PseudoStatMainHandDps]:3.1,[N.PseudoStatOffHandDps]:0}),other:ae,consumes:te,talents:X.data,specOptions:ee,raidBuffs:W.create({retributionAura:!0,powerWordFortitude:!0,markOfTheWild:!0,icyTalons:!0,hornOfWinter:!0,abominationsMight:!0,leaderOfThePack:!0,bloodlust:!0,arcaneTactics:!0,devotionAura:!0,resistanceAura:!0}),partyBuffs:j.create({}),individualBuffs:K.create({}),debuffs:V.create({bloodFrenzy:!0,sunderArmor:!0,ebonPlaguebringer:!0,criticalMass:!0,vindication:!0,frostFever:!0,judgement:!0})},playerIconInputs:[],rotationInputs:Y,includeBuffDebuffInputs:[n],excludeBuffDebuffInputs:[r,i],otherInputs:{inputs:[p,c,d,u,h,S,g,m,f,e({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),v]},encounterPicker:{showExecuteProportion:!1},presets:{rotations:[Q],talents:[X],gear:[$]},autoRotation:e=>Q.rotation.rotation,raidSimPresets:[{spec:_.SpecBloodDeathKnight,talents:X.data,specOptions:ee,consumes:te,defaultFactionRaces:{[q.Unknown]:J.RaceUnknown,[q.Alliance]:J.RaceWorgen,[q.Horde]:J.RaceTroll},defaultGear:{[q.Unknown]:{},[q.Alliance]:{1:$.gear,2:$.gear,3:$.gear,4:$.gear},[q.Horde]:{1:$.gear,2:$.gear,3:$.gear,4:$.gear}},otherDefaults:ae}]});class oe extends I{constructor(e,t){super(e,t,se)}}export{oe as B};
//# sourceMappingURL=sim-VooX1d6X.chunk.js.map
