{"version":3,"file":"sim-Cc4dwTl8.chunk.js","sources":["../../../ui/mage/frost/inputs.ts","../../../ui/mage/frost/presets.ts","../../../ui/mage/frost/sim.ts"],"sourcesContent":["import * as InputHelpers from '../../core/components/input_helpers';\nimport { Player } from '../../core/player';\nimport { Spec } from '../../core/proto/common';\nimport { TypedEvent } from '../../core/typed_event';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\n// export const WaterElementalDisobeyChance = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecFrostMage>({\n// \tfieldName: 'waterElementalDisobeyChance',\n// \tpercent: true,\n// \tlabel: 'Water Ele Disobey %',\n// \tlabelTooltip: 'Percent of Water Elemental actions which will fail. This represents the Water Elemental moving around or standing still instead of casting.',\n// \tchangeEmitter: (player: Player<Spec.SpecFrostMage>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.talentsChangeEmitter]),\n// \tshowWhen: (player: Player<Spec.SpecFrostMage>) => player.getTalents().summonWaterElemental,\n// });\n\nexport const MageRotationConfig = {\n\tinputs: [\n\t\t// ********************************************************\n\t\t//                       FROST INPUTS\n\t\t// ********************************************************\n\t\t// InputHelpers.makeRotationBooleanInput<Spec.SpecFrostMage>({\n\t\t// \tfieldName: 'useIceLance',\n\t\t// \tlabel: 'Use Ice Lance',\n\t\t// \tlabelTooltip: 'Casts Ice Lance at the end of Fingers of Frost, after using Deep Freeze.',\n\t\t// \tshowWhen: (player: Player<Spec.SpecFrostMage>) => player.getTalentTree() == 2,\n\t\t// \tchangeEmitter: (player: Player<Spec.SpecFrostMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t// }),\n\t],\n};\n","import * as PresetUtils from '../../core/preset_utils';\nimport { Conjured, Consumes, Faction, Flask, Food, Glyphs, Potions, Profession, Spec } from '../../core/proto/common';\nimport {\n\tFrostMage_Options as MageOptions,\n\tMageMajorGlyph,\n\tMageMinorGlyph,\n} from '../../core/proto/mage';\nimport { SavedTalents } from '../../core/proto/ui';\nimport FrostApl from './apls/frost.apl.json';\nimport FrostAoeApl from './apls/frost_aoe.apl.json';\nimport P1FrostGear from './gear_sets/p1_frost.gear.json';\nimport P2FrostGear from './gear_sets/p2_frost.gear.json';\nimport P3FrostAllianceGear from './gear_sets/p3_frost_alliance.gear.json';\nimport P3FrostHordeGear from './gear_sets/p3_frost_horde.gear.json';\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const FROST_P1_PRESET = PresetUtils.makePresetGear('Frost P1 Preset', P1FrostGear, { talentTree: 2 });\nexport const FROST_P2_PRESET = PresetUtils.makePresetGear('Frost P2 Preset', P2FrostGear, { talentTree: 2 });\nexport const FROST_P3_PRESET_ALLIANCE = PresetUtils.makePresetGear('Frost P3 Preset [A]', P3FrostAllianceGear, { talentTree: 2, faction: Faction.Alliance });\nexport const FROST_P3_PRESET_HORDE = PresetUtils.makePresetGear('Frost P3 Preset [H]', P3FrostHordeGear, { talentTree: 2, faction: Faction.Horde });\n\nexport const FROST_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Frost', FrostApl, { talentTree: 2 });\nexport const FROST_ROTATION_PRESET_AOE = PresetUtils.makePresetAPLRotation('Frost AOE', FrostAoeApl, { talentTree: 2 });\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\n\nexport const FrostTalents = {\n\tname: 'Frost',\n\tdata: SavedTalents.create({\n\t\t// talentsString: '23000503110003--0533030310233100030152231351',\n\t\t// glyphs: Glyphs.create({\n\t\t// \tmajor1: MageMajorGlyph.GlyphOfFrostbolt,\n\t\t// \tmajor2: MageMajorGlyph.GlyphOfEternalWater,\n\t\t// \tmajor3: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t// \tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t// \tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t// \tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t// }),\n\t}),\n};\n\nexport const DefaultFrostOptions = MageOptions.create({\n\tclassOptions: {\n\t},\n\twaterElementalDisobeyChance: 0.1,\n});\n\nexport const DefaultFrostConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredDarkRune,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 20,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n};\n","import * as OtherInputs from '../../core/components/other_inputs';\nimport { IndividualSimUI, registerSpecConfig } from '../../core/individual_sim_ui';\nimport { Player } from '../../core/player';\nimport { PlayerClasses } from '../../core/player_classes';\nimport { APLRotation } from '../../core/proto/apl';\nimport { Debuffs, Faction, IndividualBuffs, PartyBuffs, Race, RaidBuffs, Spec, Stat } from '../../core/proto/common';\nimport { Stats } from '../../core/proto_utils/stats';\nimport * as MageInputs from '../inputs';\nimport * as FrostInputs from './inputs';\nimport * as Presets from './presets';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecFrostMage, {\n\tcssClass: 'frost-mage-sim-ui',\n\tcssScheme: PlayerClasses.getCssClass(PlayerClasses.Mage),\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t\tStat.StatMastery,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t\tStat.StatMastery,\n\t],\n\t// modifyDisplayStats: (player: Player<Spec.SpecFrostMage>) => {\n\t// \tlet stats = new Stats();\n\n\t// \tif (player.getTalentTree() === 0) {\n\t// \t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().arcaneFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t// \t}\n\n\t// \treturn {\n\t// \t\ttalents: stats,\n\t// \t};\n\t// },\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.FROST_P3_PRESET_HORDE.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.48,\n\t\t\t[Stat.StatSpirit]: 0.42,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.38,\n\t\t\t[Stat.StatSpellCrit]: 0.58,\n\t\t\t[Stat.StatSpellHaste]: 0.94,\n\t\t\t[Stat.StatMP5]: 0.09,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultFrostConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.FrostTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultFrostOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tbloodlust: true,\n\t\t\tmarkOfTheWild: true,\n\t\t\ticyTalons: true,\n\t\t\tmoonkinForm: true,\n\t\t\tleaderOfThePack: true,\n\t\t\tpowerWordFortitude: true,\n\t\t\tstrengthOfEarthTotem: true,\n\t\t\ttrueshotAura: true,\n\t\t\twrathOfAirTotem: true,\n\t\t\tdemonicPact: true,\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: true,\n\t\t\tcommunion: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t\tmanaTideTotems: 1,\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tinnervateCount: 0,\n\t\t\tvampiricTouch: true,\n\t\t\tfocusMagic: true,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgement: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tshadowAndFlame: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [],\n\t// Inputs to include in the 'Rotation' section on the settings tab.\n\trotationInputs: FrostInputs.MageRotationConfig,\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\t//Should add hymn of hope, revitalize, and\n\t],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\t//FrostInputs.WaterElementalDisobeyChance,\n\t\t\tOtherInputs.InputDelay,\n\t\t\tOtherInputs.DistanceFromTarget,\n\t\t\tOtherInputs.TankAssignment,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: true,\n\t},\n\n\tpresets: {\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [Presets.FROST_ROTATION_PRESET_DEFAULT, Presets.FROST_ROTATION_PRESET_AOE],\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.FrostTalents],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [Presets.FROST_P1_PRESET, Presets.FROST_P2_PRESET, Presets.FROST_P3_PRESET_ALLIANCE, Presets.FROST_P3_PRESET_HORDE],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecFrostMage>): APLRotation => {\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets > 3) {\n\t\t\treturn Presets.FROST_ROTATION_PRESET_AOE.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.FROST_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t}\n\t},\n\n\t// simpleRotation: (player: Player<Spec.SpecFrostMage>, simple: FrostMage_Rotation, cooldowns: Cooldowns): APLRotation => {\n\t// \tconst [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\n\n\t// \tconst prepullMirrorImage = APLPrepullAction.fromJsonString(\n\t// \t\t`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":55342}}},\"doAtValue\":{\"const\":{\"val\":\"-2s\"}}}`,\n\t// \t);\n\n\t// \tconst berserking = APLAction.fromJsonString(\n\t// \t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}`,\n\t// \t);\n\t// \tconst hyperspeedAcceleration = APLAction.fromJsonString(\n\t// \t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}`,\n\t// \t);\n\t// \tconst combatPot = APLAction.fromJsonString(\n\t// \t\t`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}}`,\n\t// \t);\n\t// \tconst evocation = APLAction.fromJsonString(\n\t// \t\t`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"25%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":12051}}}`,\n\t// \t);\n\n\t// \tconst deepFreeze = APLAction.fromJsonString(`{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":44545}}},\"castSpell\":{\"spellId\":{\"spellId\":44572}}}`);\n\t// \tconst frostfireBoltWithBrainFreeze = APLAction.fromJsonString(\n\t// \t\t`{\"condition\":{\"auraIsActiveWithReactionTime\":{\"auraId\":{\"spellId\":44549}}},\"castSpell\":{\"spellId\":{\"spellId\":47610}}}`,\n\t// \t);\n\t// \tconst frostbolt = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":42842}}}`);\n\t// \tconst iceLance = APLAction.fromJsonString(\n\t// \t\t`{\"condition\":{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":44545}}},\"rhs\":{\"const\":{\"val\":\"1\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":42914}}}`,\n\t// \t);\n\n\t// \tprepullActions.push(prepullMirrorImage);\n\n\t// \tactions.push(\n\t// \t\t...([\n\t// \t\t\tberserking,\n\t// \t\t\thyperspeedAcceleration,\n\t// \t\t\tcombatPot,\n\t// \t\t\tevocation,\n\t// \t\t\tdeepFreeze,\n\t// \t\t\tfrostfireBoltWithBrainFreeze,\n\t// \t\t\t//simple.useIceLance ? iceLance : null,\n\t// \t\t\tfrostbolt,\n\t// \t\t].filter(a => a) as Array<APLAction>),\n\t// \t);\n\n\t// \treturn APLRotation.create({\n\t// \t\tprepullActions: prepullActions,\n\t// \t\tpriorityList: actions.map(action =>\n\t// \t\t\tAPLListItem.create({\n\t// \t\t\t\taction: action,\n\t// \t\t\t}),\n\t// \t\t),\n\t// \t});\n\t// },\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecFrostMage,\n\t\t\ttalents: Presets.FrostTalents.data,\n\t\t\tspecOptions: Presets.DefaultFrostOptions,\n\t\t\tconsumes: Presets.DefaultFrostConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.FROST_P1_PRESET.gear,\n\t\t\t\t\t2: Presets.FROST_P2_PRESET.gear,\n\t\t\t\t\t3: Presets.FROST_P3_PRESET_ALLIANCE.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.FROST_P1_PRESET.gear,\n\t\t\t\t\t2: Presets.FROST_P2_PRESET.gear,\n\t\t\t\t\t3: Presets.FROST_P3_PRESET_HORDE.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class FrostMageSimUI extends IndividualSimUI<Spec.SpecFrostMage> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecFrostMage>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["FROST_P1_PRESET","PresetUtils.makePresetGear","talentTree","FROST_P2_PRESET","P2FrostGear","FROST_P3_PRESET_ALLIANCE","P3FrostAllianceGear","faction","Faction","Alliance","FROST_P3_PRESET_HORDE","P3FrostHordeGear","Horde","FROST_ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","FrostApl","FROST_ROTATION_PRESET_AOE","FrostAoeApl","FrostTalents","name","data","SavedTalents","create","DefaultFrostOptions","MageOptions","classOptions","waterElementalDisobeyChance","DefaultFrostConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","defaultConjured","Conjured","ConjuredDarkRune","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","Spec","SpecFrostMage","cssClass","cssScheme","PlayerClasses","getCssClass","Mage","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","StatMastery","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.FROST_P3_PRESET_HORDE","epWeights","Stats","fromMap","consumes","Presets.DefaultFrostConsumes","talents","Presets.FrostTalents","specOptions","Presets.DefaultFrostOptions","other","Presets.OtherDefaults","raidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","markOfTheWild","icyTalons","moonkinForm","leaderOfThePack","powerWordFortitude","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPact","blessingOfKings","blessingOfMight","communion","partyBuffs","PartyBuffs","manaTideTotems","individualBuffs","IndividualBuffs","innervateCount","vampiricTouch","focusMagic","debuffs","Debuffs","judgement","ebonPlaguebringer","shadowAndFlame","playerIconInputs","rotationInputs","inputs","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.InputDelay","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","rotations","Presets.FROST_ROTATION_PRESET_DEFAULT","Presets.FROST_ROTATION_PRESET_AOE","Presets.FROST_P1_PRESET","Presets.FROST_P2_PRESET","Presets.FROST_P3_PRESET_ALLIANCE","autoRotation","player","sim","encounter","targets","length","rotation","raidSimPresets","spec","otherDefaults","defaultFactionRaces","Unknown","Race","RaceUnknown","RaceGnome","RaceTroll","defaultGear","FrostMageSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}