import{W as e,n as t,X as a,Y as i,o as s,q as o,Z as r,s as n,_ as l,$ as m,w as h,V as c,T as p,F as d,G as g,J as u}from"./preset_utils-Cf2AMUmT.chunk.js";import{aq as f,b as S,T as G,ad as y,ab as w,aj as k,ar as C,as as T,at as b,S as A,a1 as B,G as I,al as P,am as R,an as E,au as v,a6 as M,a7 as O,a8 as x,a9 as W,aa as F,a as D,ac as J,av as H,ae as j,af as U,ag as Y,ah as N,aw as $,ax as L,ay as q,F as z,R as _}from"./detailed_results-Bq3U1zBE.chunk.js";import{s as V}from"./apl_utils-CBIL9LBW.chunk.js";const X=class e{constructor(t){this.player=t.player,this.sim=t.sim,this.gemPriorityByColor={};for(const a of e.allGemColors)this.gemPriorityByColor[a]=new Array;this.jcUpgradePriority=new Array,t.addAction("Suggest Gems","suggest-gems-action",(async()=>{this.optimizeGems()}))}async optimizeGems(){let t=this.player.getGear().withoutGems();this.numSocketedJcGems=0,this.epWeights=this.player.getEpWeights(),this.useJcGems=this.player.hasProfession(S.Jewelcrafting),this.isBlacksmithing=this.player.isBlacksmithing();const a=await this.updateGear(t);this.updateGemPriority(t,a),t=t.withMetaGem(this.sim.db.lookupGem(this.metaGemID)),t=this.activateMetaGem(t),await this.updateGear(t);for(const i of e.allGemColors)this.gemPriorityByColor[i].length>0&&(t=await this.fillGemsByColor(t,i),this.useJcGems&&(t=await this.substituteJcGems(t)))}async updateGear(e){return this.player.setGear(G.nextEventID(),e),await this.sim.updateCharacterStats(G.nextEventID()),y.fromProto(this.player.getCurrentStats().finalStats)}findStrongestSocketBonus(e,t,a,i){let s=null,o=1e-8;for(const r of e.getItemSlots()){const n=e.getEquippedItem(r);if(!n)continue;if(0!=n.numSocketsOfColor(i))continue;const l=n.numSocketsOfColor(t);if(0==l||a&&1!=l)continue;const m=new y(n.item.socketBonus).computeEP(this.epWeights)/l;m>o&&(s=r,o=m)}return{itemSlot:s,socketBonus:o}}socketGemInFirstMatchingSocket(e,t,a,i){if(null!=t){const s=e.getEquippedItem(t);if(!s)return e;for(const[o,r]of s.allSocketColors().entries())if(r==a)return e.withEquippedItem(t,s.withGem(this.sim.db.lookupGem(i),o),!0)}return e}async fillGemsByColor(e,t){const a=this.findSocketsByColor(e,t);return await this.fillGemsToCaps(e,a,this.gemPriorityByColor[t],0,0)}findSocketsByColor(e,t){const a=new Array;for(const i of e.getItemSlots()){const s=e.getEquippedItem(i);if(s)for(const[e,o]of s.curSocketColors(this.isBlacksmithing).entries())s.hasSocketedGem(e)||this.allowGemInSocket(t,o,i,s)&&a.push({itemSlot:i,socketIdx:e})}return a}async substituteJcGems(t){let a=t,i=0;for(;this.numSocketedJcGems<3&&i<this.jcUpgradePriority.length;){const t=this.jcUpgradePriority[i],s=this.sim.db.lookupGem(t.gemId);if(!a.getAllGems(this.isBlacksmithing).includes(s)){i+=1;continue}const o=this.sim.db.lookupGem(e.jcUpgradesById[t.gemId]),r=a.withSingleGemSubstitution(s,o,this.isBlacksmithing);(await this.updateGear(r)).belowCaps(t.statCaps)?(a=r,this.numSocketedJcGems+=1):(await this.updateGear(a),i+=1)}return a}async fillGemsToCaps(e,t,a,i,s){let o=e;const r=this.sim.db.lookupGem(a[i].gemId);if(0==i)for(const g of t.slice(s))o=o.withGem(g.itemSlot,g.socketIdx,r);let n=await this.updateGear(o);const l=a[i].statCaps;if(n.belowCaps(l)||i==a.length-1)return o;const m=this.sim.db.lookupGem(a[i+1].gemId),h=a[i+1].statCaps;let c=l.subtract(h);l.computeEP(c)<=0&&(c=l);let p=t.length-1;for(;p>=s&&!n.belowCaps(c);p--)o=o.withGem(t[p].itemSlot,t[p].socketIdx,m),n=await this.updateGear(o);let d=p+1;return n.belowCaps(l)||(d=s),await this.fillGemsToCaps(o,t,a,i+1,d)}};X.allGemColors=[f.GemColorRed,f.GemColorYellow,f.GemColorBlue],X.jcUpgradesById={40118:42154,40125:42156,40112:42143,40111:42142,40119:36767};let Z=X;class K extends Z{constructor(e,t,a,i,s){super(e),this.metaGemID=41398,this.arpSlop=11,this.expSlop=4,this.hitTarget=262.32,this.hitSlop=4,this.useArpGems=t,this.useExpGems=a,this.useAgiGems=i,this.useStrGems=s}updateGemPriority(e,t){this.arpTarget=this.calcArpTarget(e);const a=this.calcCritCap(e),i=(new y).withStat(w.StatExpertise,this.calcExpTarget()+this.expSlop);this.passiveHit=t.getStat(w.StatMeleeHit);const s=(new y).withStat(w.StatMeleeHit,this.hitTarget+this.hitSlop);this.tearSlot=null,this.passiveArp=t.getStat(w.StatArmorPenetration),this.arpStackDetected=this.detectArpStackConfiguration(e);const o=this.arpStackDetected?4:this.arpSlop,r=(new y).withStat(w.StatArmorPenetration,this.arpTarget+o),n=new Array;this.useArpGems&&n.push({gemId:40117,statCaps:r}),this.useExpGems&&n.push({gemId:40118,statCaps:i}),this.useAgiGems&&n.push({gemId:40112,statCaps:a}),this.useStrGems&&n.push({gemId:40111,statCaps:new y}),this.gemPriorityByColor[f.GemColorRed]=n;const l=new Array;this.useExpGems&&l.push({gemId:40162,statCaps:s.add(i)}),l.push({gemId:40125,statCaps:s}),this.arpStackDetected&&l.push({gemId:40117,statCaps:r}),this.useExpGems&&l.push({gemId:40162,statCaps:s.add(i)}),this.useAgiGems&&l.push({gemId:40148,statCaps:s.add(a)}),this.useStrGems&&l.push({gemId:40143,statCaps:s}),this.useAgiGems&&l.push({gemId:40147,statCaps:a}),this.useStrGems&&l.push({gemId:40142,statCaps:a}),this.useStrGems&&l.push({gemId:40146,statCaps:new y}),this.gemPriorityByColor[f.GemColorYellow]=l,this.jcUpgradePriority=new Array,this.useExpGems&&this.jcUpgradePriority.push({gemId:40118,statCaps:i}),this.useAgiGems&&this.jcUpgradePriority.push({gemId:40112,statCaps:a}),this.useStrGems&&this.jcUpgradePriority.push({gemId:40111,statCaps:new y})}detectArpStackConfiguration(e){if(!this.useArpGems)return!1;const t=this.findSocketsByColor(e,f.GemColorRed).length-2;let a=this.passiveArp+20*t;return this.useJcGems&&(a+=42),this.arpTarget>1e3&&a>648&&a+20<this.arpTarget+4}activateMetaGem(e){const t=this.findBlueTearSlot(e),a=this.findYellowTearSlot(e);let i=f.GemColorBlue;return this.tearSlot=t.itemSlot,(null==this.tearSlot||this.arpStackDetected&&a.socketBonus>t.socketBonus)&&(i=f.GemColorYellow,this.tearSlot=a.itemSlot),this.socketTear(e,i)}socketTear(e,t){return this.socketGemInFirstMatchingSocket(e,this.tearSlot,t,49110)}findBlueTearSlot(e){const t=this.arpStackDetected?f.GemColorYellow:null;return this.findStrongestSocketBonus(e,f.GemColorBlue,!0,t)}findYellowTearSlot(e){return this.findStrongestSocketBonus(e,f.GemColorYellow,!1,f.GemColorBlue)}allowGemInSocket(e,t,a,i){const s=i.numSocketsOfColor(f.GemColorBlue)>0&&a!=this.tearSlot;let o=!1;return t!=f.GemColorYellow||s||(o=new y(i.item.socketBonus).computeEP(this.epWeights)>1e-8),e==f.GemColorYellow&&o||e==f.GemColorRed&&!o}findSocketsByColor(e,t){const a=super.findSocketsByColor(e,t);return this.arpStackDetected&&t==f.GemColorYellow&&this.sortYellowSockets(e,a),a}sortYellowSockets(e,t){t.sort(((t,a)=>{const i=t.itemSlot,s=a.itemSlot;if(i==s)return 0;if(i==this.tearSlot)return-1;if(s==this.tearSlot)return 1;const o=e.getEquippedItem(i),r=new y(o.item.socketBonus).computeEP(this.epWeights),n=e.getEquippedItem(s);return new y(n.item.socketBonus).computeEP(this.epWeights)/n.numSocketsOfColor(f.GemColorYellow)-r/o.numSocketsOfColor(f.GemColorYellow)}))}calcArpTarget(e){let t=1399;e.hasTrinket(45931)?t-=751:e.hasTrinket(50198)?t-=678:e.hasTrinket(40256)&&(t-=612);const a=e.getEquippedItem(k.ItemSlotMainHand);return 3225==a?.enchant?.effectId&&(t-=120),t}calcExpTarget(){return 213.135}calcCritCap(e){return new y}async fillGemsByColor(e,t){let a=e;return t==f.GemColorRed&&this.useArpGems&&this.useJcGems&&(a=this.optimizeJcArpGems(a)),t==f.GemColorYellow&&this.useJcGems&&this.numSocketedJcGems<3&&(a=this.fillJcHitGems(a)),await super.fillGemsByColor(a,t)}calcDistanceToArpTarget(e,t){const a=Math.max(0,Math.min(t-3,Math.floor((this.arpTarget+this.arpSlop-this.passiveArp-34*e)/20))),i=this.passiveArp+34*e+20*a;return Math.abs(i-this.arpTarget)}optimizeJcArpGems(e){const t=this.findSocketsByColor(e,f.GemColorRed),a=t.length;let i=[0,1,2,3].reduce(((e,t)=>this.calcDistanceToArpTarget(e,a)<this.calcDistanceToArpTarget(t,a)?e:t));i=Math.min(i,a);let s=e;for(let o=0;o<i;o++)s=s.withGem(t[o].itemSlot,t[o].socketIdx,this.sim.db.lookupGem(42153));return this.numSocketedJcGems=i,s}fillJcHitGems(e){const t=this.findSocketsByColor(e,f.GemColorYellow),a=Math.min(3-this.numSocketedJcGems,t.length),i=Math.max(0,Math.floor((this.hitTarget+this.hitSlop-this.passiveHit)/34)),s=Math.min(i,a);let o=e;for(let r=0;r<s;r++)o=o.withGem(t[r].itemSlot,t[r].socketIdx,this.sim.db.lookupGem(42156));return this.numSocketedJcGems+=s,o}}const Q=e({fieldName:"assumeBleedActive",label:"Assume Bleed Always Active",labelTooltip:"Assume bleed always exists for 'Rend and Tear' calculations. Otherwise will only calculate based on own rip/rake/lacerate.",extraCssClasses:["within-raid-sim-hide"]});function ee(e){const t=e.getSimpleRotation();return t.manualParams&&t.rotationType==C.SingleTarget}const te={inputs:[t({fieldName:"rotationType",label:"Type",values:[{name:"Single Target",value:C.SingleTarget},{name:"AOE",value:C.Aoe}]}),a({fieldName:"maintainFaerieFire",label:"Maintain Faerie Fire",labelTooltip:"Maintain Faerie Fire debuff. Overwrites any external Sunder effects specified in settings."}),a({fieldName:"meleeWeave",label:"Enable leave-weaving",labelTooltip:"Weave out of melee range for Stampede procs",showWhen:e=>e.getSimpleRotation().rotationType==C.SingleTarget&&e.getTalents().stampede>0,changeEmitter:e=>G.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"bearWeave",label:"Enable bear-weaving",labelTooltip:"Weave into Bear Form while pooling Energy",showWhen:e=>e.getSimpleRotation().rotationType==C.SingleTarget}),a({fieldName:"snekWeave",label:"Use Albino Snake",labelTooltip:"Reset swing timer at the end of bear-weaves using Albino Snake pet",showWhen:e=>e.getSimpleRotation().bearWeave}),a({fieldName:"allowAoeBerserk",label:"Allow AoE Berserk",labelTooltip:"Allow Berserk usage in AoE rotation",showWhen:e=>e.getSimpleRotation().rotationType==C.Aoe}),a({fieldName:"manualParams",label:"Manual Advanced Parameters",labelTooltip:"Manually specify advanced parameters, otherwise will use preset defaults"}),i({fieldName:"minRoarOffset",label:"Roar Offset",labelTooltip:"Targeted offset in Rip/Roar timings",showWhen:ee}),i({fieldName:"ripLeeway",label:"Rip Leeway",labelTooltip:"Rip leeway when determining roar clips",showWhen:ee}),a({fieldName:"useRake",label:"Use Rake",labelTooltip:"Use rake during rotation",showWhen:ee}),a({fieldName:"useBite",label:"Bite during rotation",labelTooltip:"Use bite during rotation rather than just at end",showWhen:ee}),i({fieldName:"biteTime",label:"Bite Time",labelTooltip:"Min seconds on Rip/Roar to bite",showWhen:e=>ee(e)&&1==e.getSimpleRotation().useBite&&e.getSimpleRotation().biteModeType==T.Emperical}),a({fieldName:"biteDuringExecute",label:"Bite during Execute phase",labelTooltip:"Bite aggressively during Execute phase",showWhen:e=>ee(e)&&e.getTalents().bloodInTheWater>0,changeEmitter:e=>G.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])})]},ae={items:[{id:65190,enchant:4209,gems:[68778,52220],reforging:147},{id:65107,reforging:151},{id:65083,enchant:4204,gems:[52212],reforging:146},{id:65035,enchant:4100,reforging:146},{id:65192,enchant:4102,gems:[52212,52220],reforging:154},{id:65050,enchant:4258,gems:[0],reforging:146},{id:65189,enchant:4107,gems:[52212,0],reforging:154},{id:60231,gems:[52220,52212,52212],reforging:144},{id:65191,enchant:4126,gems:[52204,52220],reforging:146},{id:65144,enchant:4076,gems:[52212],reforging:151},{id:65082,reforging:147},{id:65367,randomSuffix:-137,reforging:144},{id:65140},{id:65026},{id:65139,enchant:4227,reforging:144},{},{id:64671,gems:[52212],reforging:154}]},ie={items:[{id:46161,enchant:3817,gems:[41398,40002]},{id:45517,gems:[40002]},{id:45245,enchant:3808,gems:[40002,40002]},{id:46032,enchant:3605,gems:[40002,40058]},{id:45473,enchant:3832,gems:[40002,40002,40002]},{id:45869,enchant:3845,gems:[40037]},{id:46158,enchant:3604,gems:[40002]},{id:46095,gems:[40002,40002,40002]},{id:45536,enchant:3823,gems:[39996,39996,39996]},{id:45564,enchant:4223,gems:[39996,39996]},{id:46048,gems:[45862]},{id:45608,gems:[39996]},{id:45931},{id:46038},{id:45613,enchant:3789,gems:[40037,42702]},{},{id:40713}]},se={items:[{id:48204,enchant:3817,gems:[41398,40146]},{id:47060,gems:[40117]},{id:48207,enchant:3808,gems:[40146]},{id:47545,enchant:3605,gems:[40117]},{id:48206,enchant:3832,gems:[40117,40146]},{id:45611,enchant:3845,gems:[40146,0]},{id:47945,enchant:3604,gems:[40112,40117,0]},{id:47112,gems:[40146,40117,40117]},{id:48205,enchant:3823,gems:[40117,49110]},{id:47077,enchant:4223,gems:[40146,40117]},{id:47075,gems:[40117]},{id:45608,gems:[40117]},{id:45931},{id:47131},{id:47239,enchant:3789,gems:[40146,40117]},{},{id:47668}]},oe={items:[{id:51296,enchant:3817,gems:[41398,40117]},{id:50633,gems:[40117]},{id:51299,enchant:3808,gems:[40117]},{id:47545,enchant:3605,gems:[40117]},{id:51298,enchant:3832,gems:[40117,40125]},{id:50670,enchant:3845,gems:[40125,0]},{id:50675,enchant:3604,gems:[40162,40117,0]},{id:50707,gems:[40117,40117,40117]},{id:51297,enchant:3823,gems:[40117,40162]},{id:50607,enchant:4223,gems:[40143,40143]},{id:50604,gems:[40143]},{id:50402,gems:[40143]},{id:50363},{id:50343},{id:50735,enchant:3789,gems:[40117,49110,40143]},{},{id:50456}]},re={type:"TypeAPL",priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:50334}}}},{action:{catOptimalRotationAction:{manualParams:!1,maintainFaerieFire:!0,meleeWeave:!0,bearWeave:!0,snekWeave:!0}}}]},ne={type:"TypeAPL",priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:50334}}}},{action:{catOptimalRotationAction:{rotationType:"Aoe",manualParams:!1,maintainFaerieFire:!0}}}]},le=s("Preraid Preset",{items:[{id:60202,enchant:4209,gems:[68778,52220],reforging:165},{id:67137,reforging:153},{id:58134,enchant:4204,gems:[52212],reforging:146},{id:67134,enchant:1099,reforging:146},{id:67135,enchant:4102,gems:[52212,52212],reforging:168},{id:63454,enchant:4258,gems:[0],reforging:168},{id:62433,enchant:3222,gems:[52212,0],reforging:153},{id:56537,gems:[52212,52212],reforging:168},{id:58132,enchant:4126,gems:[52212,52220],reforging:166},{id:58482,enchant:4076,gems:[52212],reforging:153},{id:62362,reforging:153},{id:67136,reforging:152},{id:59520},{id:56394},{id:56343,enchant:4227,reforging:168},{},{id:56316,gems:[52212],reforging:146}]}),me=s("P1 Preset",ae),he=s("P2 Preset",ie),ce=s("P3 Preset",se),pe=s("P4 Preset",oe),de=o("APL Default",re);o("APL AoE",ne);const ge=b.create({rotationType:C.SingleTarget,bearWeave:!0,minCombosForRip:5,minCombosForBite:5,useRake:!0,useBite:!0,mangleSpam:!1,biteModeType:T.Emperical,biteTime:11,minRoarOffset:29,ripLeeway:1,maintainFaerieFire:!0,snekWeave:!0,manualParams:!1,biteDuringExecute:!0,allowAoeBerserk:!1,meleeWeave:!0}),ue=r("Simple Default",A.SpecFeralDruid,ge),fe={name:"Mono-Cat",data:B.create({talentsString:"-2320322312012121202301-020301",glyphs:I.create({prime1:P.GlyphOfRip,prime2:P.GlyphOfBloodletting,prime3:P.GlyphOfBerserk,major1:R.GlyphOfThorns,major2:R.GlyphOfFeralCharge,major3:R.GlyphOfRebirth,minor1:E.GlyphOfDash,minor2:E.GlyphOfMarkOfTheWild,minor3:E.GlyphOfUnburdenedRebirth})})},Se={name:"Hybrid",data:B.create({talentsString:"-2300322312310001220311-020331",glyphs:I.create({prime1:P.GlyphOfRip,prime2:P.GlyphOfBloodletting,prime3:P.GlyphOfBerserk,major1:R.GlyphOfFrenziedRegeneration,major2:R.GlyphOfMaul,major3:R.GlyphOfRebirth,minor1:E.GlyphOfDash,minor2:E.GlyphOfChallengingRoar,minor3:E.GlyphOfUnburdenedRebirth})})},Ge=v.create({assumeBleedActive:!0}),ye=M.create({flask:O.FlaskOfTheWinds,food:x.FoodSkeweredEel,defaultPotion:W.PotionOfTheTolvir,prepopPotion:W.PotionOfTheTolvir,tinkerHands:F.TinkerHandsSynapseSprings}),we={distanceFromTarget:25,highHpThreshold:.8},ke=n(A.SpecFeralDruid,{cssClass:"feral-druid-sim-ui",cssScheme:D.getCssClass(D.Druid),knownIssues:[],warnings:[],epStats:[w.StatStrength,w.StatAgility,w.StatAttackPower,w.StatMeleeHit,w.StatExpertise,w.StatMeleeCrit,w.StatMeleeHaste,w.StatMastery],epPseudoStats:[J.PseudoStatMainHandDps],epReferenceStat:w.StatAgility,displayStats:[w.StatHealth,w.StatStrength,w.StatAgility,w.StatAttackPower,w.StatMeleeHit,w.StatExpertise,w.StatMeleeCrit,w.StatMeleeHaste,w.StatMastery,w.StatMana],defaults:{gear:le.gear,epWeights:y.fromMap({[w.StatStrength]:.39,[w.StatAgility]:1,[w.StatAttackPower]:.37,[w.StatMeleeHit]:.33,[w.StatExpertise]:.32,[w.StatMeleeCrit]:.31,[w.StatMeleeHaste]:.26,[w.StatMastery]:.3},{[J.PseudoStatMainHandDps]:1.53}),other:we,consumes:ye,rotationType:H.TypeSimple,simpleRotation:ge,talents:fe.data,specOptions:Ge,raidBuffs:j.create({markOfTheWild:!0,strengthOfEarthTotem:!0,abominationsMight:!0,windfuryTotem:!0,bloodlust:!0,communion:!0,arcaneBrilliance:!0,manaSpringTotem:!0}),partyBuffs:U.create({}),individualBuffs:Y.create({}),debuffs:N.create({bloodFrenzy:!0})},playerIconInputs:[],rotationInputs:te,includeBuffDebuffInputs:[l,m],excludeBuffDebuffInputs:[],otherInputs:{inputs:[Q,h,c,p,d,g]},encounterPicker:{showExecuteProportion:!0},presets:{talents:[fe,Se],rotations:[ue],gear:[le,me]},autoRotation:e=>de.rotation.rotation,simpleRotation:(e,t,a)=>{const[i,s]=V(a),o=$.fromJsonString('{"condition":{"const":{"val":"false"}},"castSpell":{"spellId":{"spellId":50334}}}'),r=$.fromJsonString(`{"catOptimalRotationAction":{"rotationType":${t.rotationType},"manualParams":${t.manualParams},"maintainFaerieFire":${t.maintainFaerieFire},"allowAoeBerserk":${t.allowAoeBerserk},"meleeWeave":${t.meleeWeave},"bearWeave":${t.bearWeave},"snekWeave":${t.snekWeave},"minRoarOffset":${t.minRoarOffset.toFixed(2)},"ripLeeway":${t.ripLeeway.toFixed(0)},"useRake":${t.useRake},"useBite":${t.useBite},"biteDuringExecute":${t.biteDuringExecute},"biteTime":${t.biteTime.toFixed(2)}}}`);return s.push(...[o,r].filter((e=>e))),L.create({prepullActions:i,priorityList:s.map((e=>q.create({action:e})))})},raidSimPresets:[{spec:A.SpecFeralDruid,talents:fe.data,specOptions:Ge,consumes:ye,defaultFactionRaces:{[z.Unknown]:_.RaceUnknown,[z.Alliance]:_.RaceNightElf,[z.Horde]:_.RaceTauren},defaultGear:{[z.Unknown]:{},[z.Alliance]:{1:me.gear,2:he.gear,3:ce.gear,4:pe.gear},[z.Horde]:{1:me.gear,2:he.gear,3:ce.gear,4:pe.gear}},otherDefaults:we}]});class Ce extends u{constructor(e,t){super(e,t,ke),new Te(this)}}class Te extends K{constructor(e){super(e,!0,!0,!0,!0)}calcCritCap(e){let t=0;return e.hasRelic(47668)&&(t+=200),e.hasRelic(50456)&&(t+=220),(e.hasTrinket(47131)||e.hasTrinket(47464))&&(t+=510),(e.hasTrinket(47115)||e.hasTrinket(47303))&&(t+=450),(e.hasTrinket(44253)||e.hasTrinket(42987))&&(t+=300),(new y).withStat(w.StatMeleeCrit,45.91*(77.8-1.1*t*1.06*1.02/83.33))}}export{Ce as F};
//# sourceMappingURL=sim-DROzCM-E.chunk.js.map
