syntax = "proto3";
package proto;

option go_package = "./proto";
import "common.proto";

message RogueTalents {
	// Assassination
	int32 deadly_momentum = 1;
	int32 coup_de_grace = 2;
	int32 lethality = 3;
	int32 ruthlessness = 4;
	int32 quickening = 5;
	int32 puncturing_wounds = 6;
	int32 blackjack = 7;
	int32 deadly_brew = 8;
	bool cold_blood = 9;
	int32 vile_poisons = 10;
	int32 deadened_nerves = 11;
	int32 seal_fate = 12;
	int32 murderous_intent = 13;
	bool overkill = 14;
	bool master_poisoner = 15;
	int32 improved_expose_armor = 16;
	int32 cut_to_the_chase = 17;
	int32 venomous_wounds = 18;
	bool vendetta = 19;

	// Combat
	int32 improved_recuperate = 20;
	int32 improved_sinister_strike = 21;
	int32 precision = 22;
	int32 improved_slice_and_dice = 23;
	int32 improved_sprint = 24;
	int32 aggression = 25;
	int32 improved_kick = 26;
	int32 lightning_reflexes = 27;
	bool revealing_strike = 28;
	int32 reinforced_leather = 29;
	int32 improved_gouge = 30;
	int32 combat_potency = 31;
	int32 blade_twisting = 32;
	int32 throwing_specialization = 33;
	bool adrenaline_rush = 34;
	int32 savage_combat = 35;
	int32 bandits_guile = 36;
	int32 restless_blades = 37;
	bool killing_spree = 38;

	// Subtlety
	int32 nightstalker = 39;
	int32 improved_ambush = 40;
	int32 relentless_strikes = 41;
	int32 elusiveness = 42;
	int32 waylay = 43;
	int32 opportunity = 44;
	int32 initiative = 45;
	int32 energetic_recovery = 46;
	int32 find_weakness = 47;
	bool hemorrhage = 48;
	int32 honor_among_thieves = 49;
	bool premeditation = 50;
	int32 enveloping_shadows = 51;
	int32 cheat_death = 52;
	bool preparation = 53;
	int32 sanguinary_vein = 54;
	int32 slaughter_from_the_shadows = 55;
	int32 serrated_blades = 56;
	bool shadow_dance = 57;
}

enum RoguePrimeGlyph {
	RoguePrimeGlyphNone = 0;
	GlyphOfAdrenalineRush = 42954;
	GlyphOfBackstab = 42956;
	GlyphOfEviscerate = 42961;
	GlyphOfHemorrhage = 42967;
	GlyphOfKillingSpree = 45762;
	GlyphOfMutilate = 45768;
	GlyphOfRevealingStrike = 42965;
	GlyphOfRupture = 42969;
	GlyphOfShadowDance = 45764;
	GlyphOfSinisterStrike = 42972;
	GlyphOfSliceAndDice = 42973;
	GlyphOfVendetta = 45761;
}
enum RogueMajorGlyph {
	RogueMajorGlyphNone = 0;
	GlyphOfAmbush = 42955;
	GlyphOfBladeFlurry = 42957;
	GlyphOfBlind = 64493;
	GlyphOfCloakOfShadows = 45769;
	GlyphOfCripplingPoison = 42958;
	GlyphOfDeadlyThrow = 42959;
	GlyphOfEvasion = 42960;
	GlyphOfExposeArmor = 42962;
	GlyphOfFanOfKnives = 45766;
	GlyphOfFeint = 42963;
	GlyphOfGarrote = 42964;
	GlyphOfGouge = 42966;
	GlyphOfKick = 42971;
	GlyphOfPreparation = 42968;
	GlyphOfSap = 42970;
	GlyphOfSprint = 42974;
	GlyphOfTricksOfTheTrade = 45767;
	GlyphOfVanish = 63420;
}
enum RogueMinorGlyph {
	RogueMinorGlyphNone = 0;
	GlyphOfBlurredSpeed = 43379;
	GlyphOfDistract = 43376;
	GlyphOfPickLock = 43377;
	GlyphOfPickPocket = 43343;
	GlyphOfPoisons = 43380;
	GlyphOfSafeFall = 43378;
}

message Rogue {
	message Rotation {
	}
	
	message Options {
		UnitReference tricks_of_the_trade_target = 1;
		enum PoisonImbue {
			NoPoison = 0;
			InstantPoison = 1;
			DeadlyPoison = 2;
			WoundPoison = 3;
		}
		PoisonImbue mh_imbue = 2;
		PoisonImbue oh_imbue = 3;
		int32 starting_overkill_duration = 4;
		bool apply_poisons_manually = 5;
		int32 honor_of_thieves_crit_rate = 6;
		bool assume_bleed_active = 7;
		float vanish_break_time = 8;
	}
	Options options = 3;
}